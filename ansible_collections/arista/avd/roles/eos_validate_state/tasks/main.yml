# Copyright (c) 2023-2024 Arista Networks, Inc.
# Use of this source code is governed by the Apache License 2.0
# that can be found in the LICENSE file.
---
- name: Verify Requirements
  delegate_to: localhost
  when: avd_requirements is not defined and avd_verify_requirements | default(true)
  arista.avd.verify_requirements:
    requirements: "{{ lookup('file', requirements_path ~ '/requirements.txt').splitlines() }}"
    avd_ignore_requirements: "{{ avd_ignore_requirements | default(false) }}"
  vars:
    requirements_path: "{{ (role_path | split('/'))[0:-2] | join('/') }}"
  run_once: true
  register: avd_requirements

- name: Create required output directories if not present
  when: avd_create_directories | arista.avd.default(true)
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0o775"
  loop:
    - "{{ eos_validate_state_dir }}"
    - "{{ output_dir }}"
    - "{{ test_catalogs_dir }}"
    - "{{ test_results_dir }}"
    - "{{ custom_anta_catalogs_dir }}"
  delegate_to: localhost
  run_once: true
  check_mode: false

- name: Include device intended structured configuration variables
  ansible.builtin.include_vars: "{{ filename }}"
  delegate_to: localhost
  when: structured_config is not defined and lookup('first_found', filename, skip=True, errors='ignore')
  vars:
    filename: "{{ structured_dir }}/{{ inventory_hostname }}.{{ avd_structured_config_file_format }}"

- name: Run eos_validate_state_runner
  arista.avd.eos_validate_state_runner:
    logging_level: "{{ logging_level | arista.avd.default('WARNING') }}"
    skip_tests: "{{ skip_tests | arista.avd.default([]) }}"
    save_catalog: "{{ save_catalog | arista.avd.default(false) }}"
    device_catalog_path: "{{ test_catalogs_dir }}/{{ inventory_hostname }}-catalog.yml"
    test_results_dir: "{{ test_results_dir }}"
    custom_anta_catalogs_dir: "{{ custom_anta_catalogs_dir }}"
    # cprofile_file: "anta-{{inventory_hostname}}.prof"
  register: anta_results
  check_mode: false

- name: Create validation reports
  arista.avd.eos_validate_state_reports:
    csv_report_path: "{{ eos_validate_state_csv_report_path }}"
    md_report_path: "{{ eos_validate_state_md_report_path }}"
    validation_report_csv: "{{ validation_report_csv }}"
    validation_report_md: "{{ validation_report_md }}"
    only_failed_tests: "{{ only_failed_tests }}"
    test_results_dir: "{{ test_results_dir }}"
    # cprofile_file: "eos_validate_state_reports.prof"
  delegate_to: localhost
  run_once: true
  check_mode: false
  when:
    - validation_report_csv | bool or validation_report_md | bool
