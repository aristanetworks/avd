---

# L3LS Fabric Values

# If a device is set to "is_deployed: false" at the host_vars level, then shutdown interfaces towards undeployed peers.
shutdown_interfaces_towards_undeployed_peers: true

# If a device is set to "is_deployed: false" at the host_vars level, then shutdown bgp towards undeployed peers.
shutdown_bgp_towards_undeployed_peers: true

# Enable vlan aware bundles
evpn_vlan_aware_bundles: true

# EVPN host flapping settings
evpn_hostflap_detection:
  expiry_timeout: 10

# bgp peer groups passwords
bgp_peer_groups:
  ipv4_underlay_peers:
    name: UNDERLAY-PEERS
    password: "0nsCUm70mvSTxVO0ldytrg=="
  evpn_overlay_peers:
    password: "q+VNViP5i4rVjW1cxFv2wA=="
  mlag_ipv4_underlay_peer:
    name: MLAG-PEERS
    password: "15AwQNBEJ1nyF/kBEtoAGw=="
  ipvpn_gateway_peers:
    name: IPVPN-INTERWORKING-PEERS
    password: "nWwwZQLPI34O1AhoANg77g=="

# test with inline jinja2 targeting eos_designs_facts
spine_platform: "7050SX3"
spine_bgp_defaults: ['distance bgp 20 200 200']

# Spine Switches
spine:
  defaults:
    platform: "{{ spine_platform }}"
    bgp_as: 65001
    loopback_ipv4_pool: 192.168.255.0/24
    bgp_defaults: "{{ spine_bgp_defaults }}"
  nodes:
    - name: DC1-SPINE1
      id: 1
      mgmt_ip: 192.168.200.101/24
      mac_address: '0c:1d:c0:1d:62:01'
    - name: DC1-SPINE2
      platform: 7500R
      id: 2
      mgmt_ip: 192.168.200.102/24
      mac_address: '0c:1d:c0:1d:62:01'
    - name: DC1-SPINE3
      platform: 7800R3
      id: 3
      mgmt_ip: 192.168.200.103/24
      mac_address: '0c:1d:c0:1d:62:01'
    - name: DC1-SPINE4
      platform: 7280R3
      id: 4
      mgmt_ip: 192.168.200.104/24
      mac_address: '0c:1d:c0:1d:62:01'

# Leaf switch groups
# A maximum of two nodes can form a leaf group
# When two nodes are in a leaf group this will automatically form mlag pair

l3leaf:
  defaults:
    # Set to test automatic uplink/downlink allocation
    max_parallel_uplinks: 2
    loopback_ipv4_pool: 192.168.255.0/24
    loopback_ipv4_offset: 8
    vtep_loopback_ipv4_pool: 192.168.254.0/24
    # Commented out for automatic uplink allocation
    # uplink_interfaces: ['Ethernet1', 'Ethernet2', 'Ethernet3', 'Ethernet4']
    uplink_switches: ['DC1-SPINE1', 'DC1-SPINE2', 'DC1-SPINE3', 'DC1-SPINE4']
    max_uplink_switches: 8
    uplink_ipv4_pool: 172.31.254.0/23
    uplink_interface_speed: forced 100gfull
    bgp_defaults: ['distance bgp 20 200 200']
    platform: 7280R
    bgp_as: 65101
    # Commented out for automatic mlag allocation
    # mlag_interfaces: [ Ethernet5, Ethernet6 ]
    mlag_interfaces_speed: 100g
    mlag_peer_l3_vlan: 4090
    mlag_peer_vlan: 4092
    mlag_peer_link_allowed_vlans: "1-4094"
    spanning_tree_mode: mstp
    spanning_tree_root_super: true
    spanning_tree_priority: 4096
    virtual_router_mac_address: 00:dc:00:00:00:0a
    filter:
      tenants: [ Tenant_A, Tenant_B, Tenant_C, Tenant_D ]
      tags: [ opzone, web, app, db, vmotion, nfs, v6wan, v6opzone ]
    mlag_peer_l3_ipv4_pool: 10.255.251.0/24
    mlag_peer_ipv4_pool: 10.255.252.0/24
  node_groups:
    - group: DC1_LEAF1
      platform: VEOS
      filter:
        tenants: [ all ]
        tags: [ web, app, erp2, v6wan ]
      nodes:
        - name: DC1-LEAF1A
          id: 1
          rack: "rackA"
          mgmt_ip: 192.168.200.105/24
          mac_address: '0c:1d:c0:1d:62:01'
          # Commented out for automatic downlink allocation on spine
          # uplink_switch_interfaces: [ Ethernet1, Ethernet1, Ethernet1, Ethernet1 ]
          # Test setting loopback0 and the VTEP loopback manually
          loopback_ipv4_address: 192.168.42.42
          vtep_loopback_ipv4_address: 192.168.43.43
    - group: DC1_LEAF2
      bgp_as: 65102
      rack: "rackD"
      mlag: false
      # Test for multiple parallel uplinks
      uplink_switches: ['DC1-SPINE1', 'DC1-SPINE2', 'DC1-SPINE2', 'DC1-SPINE1', 'DC1-SPINE3', 'DC1-SPINE4', 'DC1-SPINE4', 'DC1-SPINE3']
      nodes:
        - name: DC1-LEAF2A
          id: 2
          rack: "rackC"
          mgmt_ip: 192.168.200.106/24
          mac_address: '0c:1d:c0:1d:62:01'
          # Commented out for automatic downlink allocation on spine
          # uplink_switch_interfaces: [ Ethernet2, Ethernet2, Ethernet2, Ethernet2 ]
        - name: DC1-LEAF2B
          id: 3
          mgmt_ip: 192.168.200.107/24
          # Commented out for automatic downlink allocation on spine
          # uplink_switch_interfaces: [ Ethernet3, Ethernet3, Ethernet3, Ethernet3 ]
    - group: DC1_SVC3
      platform: 7050SX3
      bgp_as: 65103
      mlag_port_channel_id: 2000
      mlag_domain_id: custom_mlag_domain_id
      filter:
        tenants: [ Tenant_A, Tenant_B, Tenant_C ]
        tags: [ opzone, web, app, db, vmotion, nfs, wan ]
      nodes:
        - name: DC1-SVC3A
          id: 4
          mgmt_ip: 192.168.200.108/24
          mac_address: '0c:1d:c0:1d:62:01'
          # Commented out for automatic downlink allocation on spine
          # uplink_switch_interfaces: [ Ethernet4, Ethernet4, Ethernet4, Ethernet4 ]
        - name: DC1-SVC3B
          id: 5
          mgmt_ip: 192.168.200.109/24
          # Commented out for automatic downlink allocation on spine
          # uplink_switch_interfaces: [ Ethernet5, Ethernet5, Ethernet5, Ethernet5 ]
    - group: DC1_BL1
      uplink_interfaces: ['Ethernet1', 'Ethernet2', 'Ethernet3', 'Ethernet4']
      mlag: false
      filter:
        tenants: [ all ]
        tags: [ wan ]
        always_include_vrfs_in_tenants: [ 'Tenant_B' ]
      structured_config:
        sflow:
          vrfs:
            - name: OOB
              destinations:
                - destination: 192.168.200.10
                - destination: 10.0.200.90
              # Testing custom_structured_configuration using inline jinja with switch.x facts.
              # Common customer use case, so we should make sure this does not break.
              source_interface: "{{ switch.mgmt_interface }}"
      # NB - uplink_switch_interfaces Ethernet19-21 are used by MH_LEAF1A, 1B and 2A.
      nodes:
        - name: DC1-BL1A
          id: 6
          bgp_as: 65104
          mgmt_ip: 192.168.200.110/24
          mac_address: '0c:1d:c0:1d:62:01'
          uplink_switch_interfaces: [ Ethernet22, Ethernet22, Ethernet22, Ethernet22 ]
          evpn_gateway:
            remote_peers:
              - hostname: DC1-BL2A
                # Testing below that the override is working
              - hostname: DC1-BL2B
                ip_address: 192.168.42.42  # Should be 192.168.255.17
                bgp_as: 65042  # Should be 65107
            evpn_l2:
              enabled: true
            evpn_l3:
              enabled: true
              inter_domain: true
        - name: DC1-BL1B
          id: 7
          bgp_as: 65105
          mgmt_ip: 192.168.200.111/24
          mac_address: '0c:1d:c0:1d:62:01'
          uplink_switch_interfaces: [ Ethernet23, Ethernet23, Ethernet23, Ethernet23 ]
          evpn_gateway:
            remote_peers:
              - hostname: MY_EVPN_GW1_USER_DEFINED
                ip_address: 1.1.1.1
                bgp_as: 65555
              - hostname: MY_EVPN_GW2_USER_DEFINED
                ip_address: 2.2.2.2
                bgp_as: 65555
            evpn_l2:
              enabled: true
            evpn_l3:
              enabled: true
              inter_domain: false
    - group: DC1_BL2
      uplink_interfaces: ['Ethernet1', 'Ethernet2', 'Ethernet3', 'Ethernet4']
      mlag: false
      ipvpn_gateway:
        enabled: true
        evpn_domain_id: "65000:3"
        ipvpn_domain_id: "65000:4"
        maximum_routes: 50000
        local_as: 65001
        address_families: [ vpn-ipv4, vpn-ipv6 ]
        remote_peers:
          - hostname: rr1
            ip_address: 100.70.0.1
            bgp_as: 64512
          - hostname: rr2
            ip_address: 100.70.0.2
            bgp_as: 64512
      filter:
        tenants: [ all ]
        tags: [ wan ]
        always_include_vrfs_in_tenants: [ 'Tenant_B' ]
      nodes:
        - name: DC1-BL2A
          platform: 7280R2
          id: 8
          bgp_as: 65106
          mgmt_ip: 192.168.200.117/24
          mac_address: '0c:1d:c0:1d:62:01'
          uplink_switch_interfaces: [ Ethernet24, Ethernet24, Ethernet24, Ethernet24 ]
        - name: DC1-BL2B
          platform: 7280R3
          id: 9
          bgp_as: 65107
          mgmt_ip: 192.168.200.118/24
          mac_address: '0c:1d:c0:1d:62:01'
          uplink_switch_interfaces: [ Ethernet25, Ethernet25, Ethernet25, Ethernet25 ]
    - group: DC1_CL1
      mlag: true
      uplink_interfaces: ['Ethernet1', 'Ethernet2', 'Ethernet3', 'Ethernet4']
      evpn_services_l2_only: true
      filter:
        tenants: [ Tenant_A, Tenant_B, Tenant_C ]
        tags: [ opzone, web, app, db, vmotion, nfs, wan ]
      nodes:
        - name: DC1-CL1A
          platform: 7368X4
          id: 10
          bgp_as: 65108
          mgmt_ip: 192.168.200.119/24
          uplink_switch_interfaces: [ Ethernet26, Ethernet26, Ethernet26, Ethernet26 ]
          mlag_ibgp_origin_incomplete: false
        - name: DC1-CL1B
          platform: 7300X3
          id: 11
          bgp_as: 65109
          mgmt_ip: 192.168.200.120/24
          uplink_switch_interfaces: [ Ethernet27, Ethernet27, Ethernet27, Ethernet27 ]
    - group: DC1_UNDEPLOYED_LEAF1
      platform: my_custom_platform
      filter:
        tenants: [ Tenant_A, Tenant_B, Tenant_C ]
        tags: [ opzone, web, app, db, vmotion, nfs, wan ]
      nodes:
        - name: DC1_UNDEPLOYED_LEAF1A
          id: 13
          bgp_as: 65110
          uplink_switch_interface_speed: 100g-2
          mgmt_ip: 192.168.200.121/24
          uplink_switch_interfaces: [ Ethernet28, Ethernet28, Ethernet28, Ethernet28 ]
        - name: DC1_UNDEPLOYED_LEAF1B
          id: 14
          bgp_as: 65111
          mgmt_ip: 192.168.200.122/24
          uplink_switch_interfaces: [ Ethernet29, Ethernet29, Ethernet29, Ethernet29 ]

l2leaf:
  defaults:
    platform: vEOS-LAB
    uplink_switches: [ DC1-SVC3A, DC1-SVC3B ]
    uplink_interfaces: [ Ethernet1, Ethernet2 ]
    mlag: true
    mlag_interfaces: [ Ethernet3, Ethernet4 ]
    mlag_peer_vlan: 4091
    spanning_tree_mode: mstp
    spanning_tree_priority: 16384
    rack: "rackE"
    mlag_peer_l3_ipv4_pool: 10.255.251.0/24
    mlag_peer_ipv4_pool: 10.255.252.0/24
  node_groups:
    - group: DC1_L2LEAF1
      mlag_interfaces_speed: forced 40gfull
      uplink_interface_speed: forced 10000
      uplink_switches: [ DC1-LEAF2A, DC1-LEAF2B ]
      short_esi: 0808:0707:0606
      filter:
        tenants: [ Tenant_A ]
        tags: [ opzone, web, app ]
      uplink_mtu: 1499
      nodes:
        - name: DC1-L2LEAF1A
          id: 8
          mgmt_ip: 192.168.200.112/24
          mac_address: '0c:1d:c0:1d:62:01'
          uplink_switch_interfaces: [ Ethernet7, Ethernet7 ]
          uplink_mtu: 1498
        - name: DC1-L2LEAF1B
          id: 11
          mgmt_ip: 192.168.200.115/24
          mac_address: '0c:1d:c0:1d:62:02'
          uplink_switch_interfaces: [ Ethernet8, Ethernet8 ]
    - group: DC1_L2LEAF2
      mlag_dual_primary_detection: true
      uplink_interface_speed: forced 100gfull
      uplink_switch_interface_speed: 100g-2
      uplink_switch_port_channel_id: 1007 # Test uplink_switch_port_channel_id on mlag l2leaf
      uplink_port_channel_id: 1001 # Test uplink_port_channel_id on mlag l2leaf
      nodes:
        - name: DC1-L2LEAF2A
          id: 9
          mgmt_ip: 192.168.200.113/24
          mac_address: '0c:1d:c0:1d:62:01'
          uplink_switch_interfaces: [ Ethernet7, Ethernet7 ]
        - name: DC1-L2LEAF2B
          id: 10
          mgmt_ip: 192.168.200.114/24
          mac_address: '0c:1d:c0:1d:62:01'
          uplink_switch_interfaces: [ Ethernet8, Ethernet8 ]
    - group: DC1_L2LEAF3
      uplink_switches: [ DC1-LEAF2A, DC1-LEAF2B ]
      short_esi: 0606:0707:0808
      filter:
        tenants: [ Tenant_A ]
        tags: [ opzone, web, app ]
      nodes:
        - name: DC1-L2LEAF3A
          # Testing no id for an L2 Leaf when not needed
          # id: 12
          mgmt_ip: 192.168.200.116/24
          mac_address: '0c:1d:c0:1d:62:01'
          uplink_switch_interfaces: [ Ethernet9, Ethernet9 ]
    - group: DC1_L2LEAF4
      uplink_switches: [ DC1-LEAF2A, DC1-LEAF2B ]
      short_esi: auto # Test Auto ESI
      filter:
        tenants: [ Tenant_A ]
        tags: [ opzone, web, app ]
      nodes:
        - name: DC1-L2LEAF4A
          id: 13
          mgmt_ip: 192.168.200.119/24
          uplink_switch_interfaces: [ Ethernet13, Ethernet13 ]
          uplink_switch_port_channel_id: 1013 # Test uplink_switch_port_channel_id on non-mlag l2leaf
          uplink_port_channel_id: 1001 # Test uplink_port_channel_id on non-mlag l2leaf
    # This pair to demo Auto ESI and automatic uplinks for l2leaf
    - group: DC1_L2LEAF5
      uplink_switches: [ DC1-LEAF2A, DC1-LEAF2B ]
      short_esi: auto # Test Auto ESI to MLAG pair
      filter:
        tenants: [ Tenant_A ]
        tags: [ opzone, web, app ]
      nodes:
        # Testing with l2 leaf in MLAG with dotted hostnames
        - name: DC1.L2LEAF5A
          id: 14
          mgmt_ip: 192.168.200.120/24
        - name: DC1.L2LEAF5B
          id: 15
          mgmt_ip: 192.168.200.121/24
    # Example for issue 4124
    - group: DC1_L2LEAF6
      short_esi: auto # Test Auto ESI to MLAG pair
      nodes:
        - name: DC1.L2LEAF6A
          id: 16
          mgmt_ip: 192.168.200.122/24
          uplink_switches: [ DC1-LEAF2A ]
          uplink_switch_interfaces: [ Ethernet30 ]
        - name: DC1.L2LEAF6B
          id: 17
          mgmt_ip: 192.168.200.123/24
          uplink_switches: [ DC1-LEAF2B ]
          uplink_switch_interfaces: [ Ethernet31 ]

# Update p2p mtu 9000 -> 1500
p2p_uplinks_mtu: 1500

# Adjust default bfd values
bfd_multihop:
  interval: 1200
  min_rx: 1200
  multiplier: 3

custom_structured_configuration_prefix: [ 'my_dci_', 'my_special_dci_', 'override_' ]

# Set Hardware Speed Groups per platform
platform_speed_groups:
  - platform: 7280R             # Only setting speed-groups on 7280R platform, so only L3leaf should get this setting.
    speeds:
      - speed: 25G
        speed_groups: [ 3, 2, 5/1 ]    # Unsorted order, but we should sort output correctly.
      - speed: 10G
        speed_groups: [ 1, 2, 4 ] # Duplicate speed-group 2. Since we sort on key first the result will be 25G for group 2
  - platform: my_custom_platform
    speeds:
      - speed: 10G
        speed_groups: [ 3, 2, 5/1 ]
      - speed: 25G
        speed_groups: [ 1, 2, 4 ]

# Set Aboot password with sha512 hash
boot:
  secret:
    key: a153de6290ff1409257ade45f
