[
  {
    "name": "dc1-spine2",
    "test": "VerifyAcctConsoleMethods",
    "categories": [
      "aaa"
    ],
    "description": "Verifies the AAA accounting console method lists for different accounting types (system, exec, commands, dot1x)."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyAcctDefaultMethods",
    "categories": [
      "aaa"
    ],
    "description": "Verifies the AAA accounting default method lists for different accounting types (system, exec, commands, dot1x)."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyAuthenMethods",
    "categories": [
      "aaa"
    ],
    "description": "Verifies the AAA authentication method lists for different authentication types (login, enable, dot1x)."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyAuthzMethods",
    "categories": [
      "aaa"
    ],
    "description": "Verifies the AAA authorization method lists for different authorization types (commands, exec)."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyTacacsServerGroups",
    "categories": [
      "aaa"
    ],
    "description": "Verifies if the provided TACACS server group(s) are configured."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyTacacsServers",
    "categories": [
      "aaa"
    ],
    "description": "Verifies TACACS servers are configured for a specified VRF."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyTacacsSourceIntf",
    "categories": [
      "aaa"
    ],
    "description": "Verifies TACACS source-interface for a specified VRF."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyBFDPeersHealth",
    "categories": [
      "bfd"
    ],
    "description": "Verifies the health of all IPv4 BFD peers."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyBFDPeersIntervals",
    "categories": [
      "bfd"
    ],
    "description": "Verifies the timers of the IPv4 BFD peers in the specified VRF."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyBFDSpecificPeers",
    "categories": [
      "bfd"
    ],
    "description": "Verifies the IPv4 BFD peer's sessions and remote disc in the specified VRF."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyBGPAdvCommunities",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the advertised communities of a BGP peer."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyBGPExchangedRoutes",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the advertised and received routes of BGP peers."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyBGPPeerASNCap",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the four octet asn capabilities of a BGP peer."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyBGPPeerCount",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the count of BGP peers."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyBGPPeerMD5Auth",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the MD5 authentication and state of a BGP peer."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyBGPPeerMPCaps",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the multiprotocol capabilities of a BGP peer."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyBGPPeerRouteRefreshCap",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the route refresh capabilities of a BGP peer."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyBGPPeersHealth",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the health of BGP peers"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyBGPSpecificPeers",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the health of specific BGP peer(s)."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyBGPTimers",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the timers of a BGP peer."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyEVPNType2Route",
    "categories": [
      "bgp"
    ],
    "description": "Verifies the EVPN Type-2 routes for a given IPv4 or MAC address and VNI."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyRunningConfigDiffs",
    "categories": [
      "configuration"
    ],
    "description": "Verifies there is no difference between the running-config and the startup-config"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyZeroTouch",
    "categories": [
      "configuration"
    ],
    "description": "Verifies ZeroTouch is disabled"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyLLDPNeighbors",
    "categories": [
      "connectivity"
    ],
    "description": "Verifies that the provided LLDP neighbors are connected properly.",
    "custom_field": "Local: Ethernet1 - Remote: dc1-leaf1a Ethernet2"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyLLDPNeighbors",
    "categories": [
      "connectivity"
    ],
    "description": "Verifies that the provided LLDP neighbors are connected properly.",
    "custom_field": "Local: Ethernet2 - Remote: dc1-leaf1b Ethernet2"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyLLDPNeighbors",
    "categories": [
      "connectivity"
    ],
    "description": "Verifies that the provided LLDP neighbors are connected properly.",
    "custom_field": "Local: Ethernet3 - Remote: dc1-leaf2a Ethernet2"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyLLDPNeighbors",
    "categories": [
      "connectivity"
    ],
    "description": "Verifies that the provided LLDP neighbors are connected properly.",
    "custom_field": "Local: Ethernet5 - Remote: dc1-svc-leaf1a Ethernet2"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyLLDPNeighbors",
    "categories": [
      "connectivity"
    ],
    "description": "Verifies that the provided LLDP neighbors are connected properly.",
    "custom_field": "Local: Ethernet6 - Remote: dc1-svc-leaf1b Ethernet2"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: P2P Interface Ethernet1 (IP: 10.255.255.2) - Destination: dc1-leaf1a Ethernet2 (IP: 10.255.255.3)"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: P2P Interface Ethernet2 (IP: 10.255.255.6) - Destination: dc1-leaf1b Ethernet2 (IP: 10.255.255.7)"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: P2P Interface Ethernet3 (IP: 10.255.255.10) - Destination: dc1-leaf2a Ethernet2 (IP: 10.255.255.11)"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: P2P Interface Ethernet5 (IP: 10.33.255.18) - Destination: dc1-svc-leaf1a Ethernet2 (IP: 10.33.255.19)"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyReachability",
    "categories": [
      "connectivity"
    ],
    "description": "Test the network reachability to one or many destination IP(s).",
    "custom_field": "Source: P2P Interface Ethernet6 (IP: 10.33.255.22) - Destination: dc1-svc-leaf1b Ethernet2 (IP: 10.33.255.23)"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyFieldNotice44Resolution",
    "categories": [
      "field notices"
    ],
    "description": "Verifies that the device is using the correct Aboot version per FN0044."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyFieldNotice72Resolution",
    "categories": [
      "field notices"
    ],
    "description": "Verifies if the device is exposed to FN0072, and if the issue has been mitigated."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyGreenT",
    "categories": [
      "greent"
    ],
    "description": "Verifies if a GreenT policy is created."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyGreenTCounters",
    "categories": [
      "greent"
    ],
    "description": "Verifies if the GreenT counters are incremented."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyAdverseDrops",
    "categories": [
      "hardware"
    ],
    "description": "Verifies there are no adverse drops on DCS-7280 and DCS-7500 family switches."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyEnvironmentCooling",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the status of power supply fans and all fan trays."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyEnvironmentCooling",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the status of power supply fans and all fan trays.",
    "custom_field": "Accepted States: 'ok'"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyEnvironmentPower",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the power supplies status."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyEnvironmentPower",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the power supplies status.",
    "custom_field": "Accepted States: 'ok'"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyEnvironmentSystemCooling",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the system cooling status."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyTemperature",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the device temperature."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyTemperature",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the device temperature."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyTransceiversManufacturers",
    "categories": [
      "hardware"
    ],
    "description": "Verifies if all transceivers come from approved manufacturers."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyTransceiversManufacturers",
    "categories": [
      "hardware"
    ],
    "description": "Verifies if all transceivers come from approved manufacturers.",
    "custom_field": "Accepted Manufacturers: 'Arista Networks', 'Arastra, Inc.', 'Not Present'"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyTransceiversTemperature",
    "categories": [
      "hardware"
    ],
    "description": "Verifies the transceivers temperature."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyIllegalLACP",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies there are no illegal LACP packets in all port channels."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyInterfaceDiscards",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies there are no interface discard counters."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyInterfaceErrDisabled",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies there are no interfaces in the errdisabled state."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyInterfaceErrors",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies there are no interface error counters."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Ethernet1 - P2P_dc1-leaf1a_Ethernet2 = 'up'"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Ethernet2 - P2P_dc1-leaf1b_Ethernet2 = 'up'"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Ethernet3 - P2P_dc1-leaf2a_Ethernet2 = 'up'"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Ethernet4 - P2P_dc1-leaf2b_Ethernet2 = 'adminDown'"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Ethernet5 - P2P_dc1-svc-leaf1a_Ethernet2 = 'up'"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Ethernet6 - P2P_dc1-svc-leaf1b_Ethernet2 = 'up'"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyInterfacesStatus",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of the provided interfaces.",
    "custom_field": "Interface Loopback0 - ROUTER_ID = 'up'"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyInterfaceUtilization",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies that the utilization of interfaces is below a certain threshold."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyIPProxyARP",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies if Proxy ARP is enabled."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyL2MTU",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the global L2 MTU of all L2 interfaces."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyL3MTU",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the global L3 MTU of all L3 interfaces."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyLoopbackCount",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the number of loopback interfaces and their status."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyPortChannels",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies there are no inactive ports in all port channels."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyStormControlDrops",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies there are no interface storm-control drop counters."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifySVI",
    "categories": [
      "interfaces"
    ],
    "description": "Verifies the status of all SVIs."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyLANZ",
    "categories": [
      "lanz"
    ],
    "description": "Verifies if LANZ is enabled."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyOSPFMaxLSA",
    "categories": [
      "ospf"
    ],
    "description": "Verifies all OSPF instances did not cross the maximum LSA threshold."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyOSPFNeighborCount",
    "categories": [
      "ospf"
    ],
    "description": "Verifies the number of OSPF neighbors in FULL state is the one we expect."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyOSPFNeighborState",
    "categories": [
      "ospf"
    ],
    "description": "Verifies all OSPF neighbors are in FULL state."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyPtpGMStatus",
    "categories": [
      "ptp"
    ],
    "description": "Verifies that the device is locked to a valid PTP Grandmaster."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyPtpLockStatus",
    "categories": [
      "ptp"
    ],
    "description": "Verifies that the device was locked to the upstream PTP GM in the last minute."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyPtpModeStatus",
    "categories": [
      "ptp"
    ],
    "description": "Verifies that the device is configured as a PTP Boundary Clock."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyPtpOffset",
    "categories": [
      "ptp"
    ],
    "description": "Verifies that the PTP timing offset is within +/- 1000ns from the master clock."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyPtpPortModeStatus",
    "categories": [
      "ptp"
    ],
    "description": "Verifies the PTP interfaces state."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyRoutingProtocolModel",
    "categories": [
      "routing"
    ],
    "description": "Verifies the configured routing protocol model."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyRoutingTableEntry",
    "categories": [
      "routing"
    ],
    "description": "Verifies that the provided routes are present in the routing table of a specified VRF."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyRoutingTableSize",
    "categories": [
      "routing"
    ],
    "description": "Verifies the size of the IP routing table of the default VRF."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyAPIHttpsSSL",
    "categories": [
      "security"
    ],
    "description": "Verifies if the eAPI has a valid SSL profile."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyAPIHttpsSSL",
    "categories": [
      "security"
    ],
    "description": "Verifies if the eAPI has a valid SSL profile.",
    "custom_field": "eAPI HTTPS SSL Profile: eAPI_SSL_Profile"
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyAPIHttpStatus",
    "categories": [
      "security"
    ],
    "description": "Verifies if eAPI HTTP server is disabled globally."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyAPIIPv4Acl",
    "categories": [
      "security"
    ],
    "description": "Verifies if eAPI has the right number IPv4 ACL(s) configured for a specified VRF."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyAPIIPv6Acl",
    "categories": [
      "security"
    ],
    "description": "Verifies if eAPI has the right number IPv6 ACL(s) configured for a specified VRF."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyAPISSLCertificate",
    "categories": [
      "security"
    ],
    "description": "Verifies the eAPI SSL certificate expiry, common subject name, encryption algorithm and key size."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyBannerLogin",
    "categories": [
      "security"
    ],
    "description": "Verifies the login banner of a device."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyBannerMotd",
    "categories": [
      "security"
    ],
    "description": "Verifies the motd banner of a device."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyIPSecConnHealth",
    "categories": [
      "security"
    ],
    "description": "Verifies all IPv4 security connections."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyIPv4ACL",
    "categories": [
      "security"
    ],
    "description": "Verifies the configuration of IPv4 ACLs."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifySpecificIPSecConn",
    "categories": [
      "security"
    ],
    "description": "Verifies IPv4 security connections for a peer."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifySSHIPv4Acl",
    "categories": [
      "security"
    ],
    "description": "Verifies if the SSHD agent has IPv4 ACL(s) configured."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifySSHIPv6Acl",
    "categories": [
      "security"
    ],
    "description": "Verifies if the SSHD agent has IPv6 ACL(s) configured."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifySSHStatus",
    "categories": [
      "security"
    ],
    "description": "Verifies if the SSHD agent is disabled in the default VRF."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyTelnetStatus",
    "categories": [
      "security"
    ],
    "description": "Verifies if Telnet is disabled in the default VRF."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyDNSLookup",
    "categories": [
      "services"
    ],
    "description": "Verifies the DNS name to IP address resolution."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyDNSServers",
    "categories": [
      "services"
    ],
    "description": "Verifies if the DNS servers are correctly configured."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyErrdisableRecovery",
    "categories": [
      "services"
    ],
    "description": "Verifies the errdisable recovery reason, status, and interval."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyHostname",
    "categories": [
      "services"
    ],
    "description": "Verifies the hostname of a device."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifySnmpIPv4Acl",
    "categories": [
      "snmp"
    ],
    "description": "Verifies if the SNMP agent has IPv4 ACL(s) configured."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifySnmpIPv6Acl",
    "categories": [
      "snmp"
    ],
    "description": "Verifies if the SNMP agent has IPv6 ACL(s) configured."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifySnmpStatus",
    "categories": [
      "snmp"
    ],
    "description": "Verifies if the SNMP agent is enabled."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyEOSVersion",
    "categories": [
      "software"
    ],
    "description": "Verifies the EOS version of the device."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyTerminAttrVersion",
    "categories": [
      "software"
    ],
    "description": "Verifies the TerminAttr version of the device."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyStunClient",
    "categories": [
      "stun"
    ],
    "description": "Verifies the STUN client is configured with the specified IPv4 source address and port. Validate the public IP and port if provided."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyAgentLogs",
    "categories": [
      "system"
    ],
    "description": "Verifies there are no agent crash reports."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyCoredump",
    "categories": [
      "system"
    ],
    "description": "Verifies there are no core dump files."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyCPUUtilization",
    "categories": [
      "system"
    ],
    "description": "Verifies whether the CPU utilization is below 75%."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyFileSystemUtilization",
    "categories": [
      "system"
    ],
    "description": "Verifies that no partition is utilizing more than 75% of its disk space."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyMemoryUtilization",
    "categories": [
      "system"
    ],
    "description": "Verifies whether the memory utilization is below 75%."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyNTP",
    "categories": [
      "system"
    ],
    "description": "Verifies if NTP is synchronised."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyNTP",
    "categories": [
      "system"
    ],
    "description": "Verifies if NTP is synchronised."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyReloadCause",
    "categories": [
      "system"
    ],
    "description": "Verifies the last reload cause of the device."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyReloadCause",
    "categories": [
      "system"
    ],
    "description": "Verifies the last reload cause of the device."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyUptime",
    "categories": [
      "system"
    ],
    "description": "Verifies the device uptime."
  },
  {
    "name": "dc1-spine2",
    "test": "VerifyVlanInternalPolicy",
    "categories": [
      "vlan"
    ],
    "description": "Verifies the VLAN internal allocation policy and the range of VLANs."
  }
]