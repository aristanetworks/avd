# Testing duplicate VRF definitions according to the following rules documented in the schema.
# Also see eos_designs_unit_tests for testing of the intended functionality.

# It is recommended to only define a VRF in one Tenant. If the same VRF name is used across multiple tenants and those tenants
# are accepted by `filter.tenants` on the node, any object set under the duplicate VRFs must either be unique or be an exact match.

type: l3leaf
l3leaf:
  defaults:
    loopback_ipv4_pool: 192.168.255.0/24
    vtep_loopback_ipv4_pool: 192.168.254.0/24
    virtual_router_mac_address: 00:dc:00:00:00:0a
  nodes:
    - name: duplicate-vrfs-tenant-igmp-snooping-conflict
      id: 101
      bgp_as: 101
      filter:
        tenants:
          - TENANT1
          - DUPLICATE_TENANT1

tenants:
  - name: TENANT1
    igmp_snooping_querier:
      enabled: true
    mac_vrf_vni_base: 10000
    vrfs:
      - name: VRF1
        vrf_id: 1
        svis:
          - id: 100
            enabled: true
            name: VLAN100
            ip_address_virtual: 10.0.100.1/24

  - name: DUPLICATE_TENANT1
    # Conflicting IGMP snooping setting on tenant so an error will be raised.
    igmp_snooping_querier:
      enabled: false
    mac_vrf_vni_base: 10000
    vrfs:
      - name: VRF1
        vrf_id: 1
        svis:
          - id: 100
            enabled: true
            name: VLAN100
            ip_address_virtual: 10.0.100.1/24

expected_error_message: >-
  Found duplicate objects with conflicting data while generating configuration for IGMP snooping for SVIs in VRF 'VRF1'.
  {'id': 100, 'querier': {'enabled': True, 'address': '192.168.255.101'}} conflicts with {'id': 100, 'querier':
  {'enabled': False}}.
