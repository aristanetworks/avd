{#
 Copyright (c) 2023-2024 Arista Networks, Inc.
 Use of this source code is governed by the Apache License 2.0
 that can be found in the LICENSE file.
#}
{# doc - ethernet interfaces #}
{% if ethernet_interfaces is arista.avd.defined %}

### Ethernet Interfaces

#### Ethernet Interfaces Summary

##### L2

| Interface | Description | Mode | VLANs | Native VLAN | Trunk Group | Channel-Group |
| --------- | ----------- | ---- | ----- | ----------- | ----------- | ------------- |
{%     for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%         if ethernet_interface.channel_group.id is arista.avd.defined %}
{%             set port_channel_interface_name = 'Port-Channel' ~ ethernet_interface.channel_group.id %}
{%             set port_channel_interface = port_channel_interfaces | arista.avd.default([]) |
                                                                      selectattr('name', 'arista.avd.defined', port_channel_interface_name) |
                                                                      first %}
{#  Below if condition is added to keep the existing support for rendering switchport attributes on the basis of port_channel_interface.type == switched #}
{#  TODO: AVD6.0 this if condition should be removed once the port_channel_interface.type key is removed in AVD6.0 #}
{%             if (port_channel_interface.switchport.mode is arista.avd.defined or
                port_channel_interface.switchport.access_vlan is arista.avd.defined or
                port_channel_interface.switchport.trunk.allowed_vlan is arista.avd.defined or
                port_channel_interface.switchport.trunk.native_vlan_tag is arista.avd.defined(true) or
                port_channel_interface.switchport.trunk.native_vlan is arista.avd.defined or
                port_channel_interface.switchport.trunk.groups is arista.avd.defined or
                port_channel_interface.switchport.enabled is arista.avd.defined(true)) and
                (port_channel_interface.type is not arista.avd.defined or (port_channel_interface.type is arista.avd.defined and port_channel_interface.type not in ["switched", "routed"])) %}
{%                 set description = ethernet_interface.description | arista.avd.default("-") %}
{%                 set mode = port_channel_interface.switchport.mode | arista.avd.default('-') %}
{%                 if port_channel_interface.switchport.access_vlan is arista.avd.defined or
                    port_channel_interface.switchport.trunk.allowed_vlan is arista.avd.defined %}
{%                     set switchport_vlans = [] %}
{%                     if port_channel_interface.switchport.access_vlan is arista.avd.defined %}
{%                         do switchport_vlans.append(port_channel_interface.switchport.access_vlan) %}
{%                     endif %}
{%                     if port_channel_interface.switchport.trunk.allowed_vlan is arista.avd.defined %}
{%                         do switchport_vlans.extend(port_channel_interface.switchport.trunk.allowed_vlan | arista.avd.range_expand | map('int')) %}
{%                     endif %}
{%                     if switchport_vlans %}
{%                         set switchport_vlans = switchport_vlans | arista.avd.list_compress %}
{%                     else %}
{%                         set switchport_vlans = port_channel_interface.switchport.trunk.allowed_vlan %}
{%                     endif %}
{%                 endif %}
{%                 if port_channel_interface.switchport.trunk.native_vlan_tag is arista.avd.defined(true) %}
{%                     set native_vlan = "tag" %}
{%                 else %}
{%                     set native_vlan = port_channel_interface.switchport.trunk.native_vlan | arista.avd.default('-') %}
{%                 endif %}
{%                 set channel_group = ethernet_interface.channel_group.id %}
{%                 set trunk_groups = port_channel_interface.switchport.trunk.groups | arista.avd.default(['-']) | join(', ') %}
| {{ ethernet_interface.name }} | {{ description }} | *{{ mode }} | *{{ switchport_vlans | arista.avd.default('-') }} | *{{ native_vlan }} | *{{ trunk_groups }} | {{ channel_group }} |
{# TODO: AVD6.0 Below elif block should be removed once the deprecated keys are removed in AVD6.0 #}
{%             elif port_channel_interface.type is arista.avd.defined('switched') %}
{%                 set description = ethernet_interface.description | arista.avd.default("-") %}
{%                 set mode = port_channel_interface.mode | arista.avd.default('-') %}
{%                 set switchport_vlans = port_channel_interface.vlans | arista.avd.default('-') %}
{%                 if  port_channel_interface.native_vlan_tag is arista.avd.defined(true) %}
{%                     set native_vlan = "tag" %}
{%                 else %}
{%                     set native_vlan = port_channel_interface.native_vlan | arista.avd.default('-') %}
{%                 endif %}
{%                 set channel_group = ethernet_interface.channel_group.id %}
{%                 set trunk_groups = port_channel_interface.trunk_groups | arista.avd.default(['-']) | join(', ') %}
| {{ ethernet_interface.name }} | {{ description }} | *{{ mode }} | *{{ switchport_vlans }} | *{{ native_vlan }} | *{{ trunk_groups }} | {{ channel_group }} |
{%             endif %}
{%         else %}
{#  Below if condition is added to keep the existing support for rendering switchport attributes on the basis of port_channel_interface.type == switched #}
{#  TODO: AVD6.0 this if condition should be removed once the port_channel_interface.type key is removed in AVD6.0 #}
{%             if (ethernet_interface.switchport.mode is arista.avd.defined or
                ethernet_interface.switchport.access_vlan is arista.avd.defined or
                ethernet_interface.switchport.trunk.allowed_vlan is arista.avd.defined or
                ethernet_interface.switchport.trunk.native_vlan_tag is arista.avd.defined(true) or
                ethernet_interface.switchport.trunk.native_vlan is arista.avd.defined or
                ethernet_interface.switchport.trunk.groups is arista.avd.defined or
                ethernet_interface.switchport.enabled is arista.avd.defined(true)) and
                (ethernet_interface.type is not arista.avd.defined or (ethernet_interface.type is arista.avd.defined and ethernet_interface.type not in ["switched", "routed"])) %}
{%                 set description = ethernet_interface.description | arista.avd.default("-") %}
{%                 set mode = ethernet_interface.switchport.mode | arista.avd.default('-') %}
{%                 if ethernet_interface.switchport.access_vlan is arista.avd.defined or
                    ethernet_interface.switchport.trunk.allowed_vlan is arista.avd.defined %}
{%                     set switchport_vlans = [] %}
{%                     if ethernet_interface.switchport.access_vlan is arista.avd.defined %}
{%                         do switchport_vlans.append(ethernet_interface.switchport.access_vlan) %}
{%                     endif %}
{%                     if ethernet_interface.switchport.trunk.allowed_vlan is arista.avd.defined %}
{%                         do switchport_vlans.extend(ethernet_interface.switchport.trunk.allowed_vlan | arista.avd.range_expand | map('int')) %}
{%                     endif %}
{%                     if switchport_vlans %}
{%                         set switchport_vlans = switchport_vlans | arista.avd.list_compress %}
{%                     elif ethernet_interface.switchport.trunk.allowed_vlan is arista.avd.defined("none") %}
{%                         set switchport_vlans = ethernet_interface.switchport.trunk.allowed_vlan %}
{%                     endif %}
{%                 endif %}
{%                 if ethernet_interface.switchport.trunk.native_vlan_tag is arista.avd.defined(true) %}
{%                     set native_vlan = "tag" %}
{%                 else %}
{%                     set native_vlan = ethernet_interface.switchport.trunk.native_vlan | arista.avd.default('-') %}
{%                 endif %}
{%                 set trunk_groups = ethernet_interface.switchport.trunk.groups | arista.avd.default(['-']) | join(', ') %}
| {{ ethernet_interface.name }} | {{ description }} | {{ mode }} | {{ switchport_vlans | arista.avd.default('-') }} | {{ native_vlan }} | {{ trunk_groups }} | - |
{# TODO: AVD6.0 Below elif block should be removed once the deprecated keys are removed in AVD6.0 #}
{%             elif ethernet_interface.type is arista.avd.defined('switched') %}
{%                 set description = ethernet_interface.description | arista.avd.default("-") %}
{%                 set mode = ethernet_interface.mode | arista.avd.default('-') %}
{%                 set switchport_vlans = ethernet_interface.vlans | arista.avd.default('-') %}
{%                 if  ethernet_interface.native_vlan_tag is arista.avd.defined(true) %}
{%                     set native_vlan = "tag" %}
{%                 else %}
{%                     set native_vlan = ethernet_interface.native_vlan | arista.avd.default('-') %}
{%                 endif %}
{%                 set trunk_groups = ethernet_interface.trunk_groups | arista.avd.default(['-']) | join(', ') %}
| {{ ethernet_interface.name }} | {{ description }} | {{ mode }} | {{ switchport_vlans }} | {{ native_vlan }} | {{ trunk_groups }} | - |
{%             endif %}
{%         endif %}
{%     endfor %}

*Inherited from Port-Channel Interface
{# Encapsulation #}
{%     set encapsulation_dot1q_interfaces = [] %}
{%     set flexencap_interfaces = [] %}
{%     for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%         if ethernet_interface.encapsulation_dot1q.vlan is arista.avd.defined %}
{%             do encapsulation_dot1q_interfaces.append(ethernet_interface) %}
{%         elif ethernet_interface.encapsulation_vlan.client.encapsulation is arista.avd.defined %}
{%             do flexencap_interfaces.append(ethernet_interface) %}
{%         elif ethernet_interface.type | arista.avd.default in ['l3dot1q', 'l2dot1q'] %}
{%             if ethernet_interface.encapsulation_dot1q_vlan is arista.avd.defined %}
{%                 do encapsulation_dot1q_interfaces.append(ethernet_interface) %}
{%             elif ethernet_interface.encapsulation_vlan is arista.avd.defined %}
{%                 do flexencap_interfaces.append(ethernet_interface) %}
{%             endif %}
{%         endif %}
{%     endfor %}
{%     if encapsulation_dot1q_interfaces | length > 0 %}

##### Encapsulation Dot1q Interfaces

| Interface | Description | Vlan ID | Dot1q VLAN Tag | Dot1q Inner VLAN Tag |
| --------- | ----------- | ------- | -------------- | -------------------- |
{%         for ethernet_interface in encapsulation_dot1q_interfaces %}
{%             set description = ethernet_interface.description | arista.avd.default('-') %}
{%             set vlan_id = ethernet_interface.vlan_id | arista.avd.default('-') %}
{%             set encapsulation_dot1q_vlan = ethernet_interface.encapsulation_dot1q.vlan | arista.avd.default(ethernet_interface.encapsulation_dot1q_vlan, '-') %}
{%             set encapsulation_dot1q_inner_vlan = ethernet_interface.encapsulation_dot1q.inner_vlan | arista.avd.default('-') %}
| {{ ethernet_interface.name }} | {{ description }} | {{ vlan_id }} | {{ encapsulation_dot1q_vlan }} | {{ encapsulation_dot1q_inner_vlan }} |
{%         endfor %}
{%     endif %}
{%     if flexencap_interfaces | length > 0 %}

##### Flexible Encapsulation Interfaces

| Interface | Description | Vlan ID | Client Encapsulation | Client Inner Encapsulation | Client VLAN | Client Outer VLAN Tag | Client Inner VLAN Tag | Network Encapsulation | Network Inner Encapsulation | Network VLAN | Network Outer VLAN Tag | Network Inner VLAN Tag |
| --------- | ----------- | ------- | --------------- | --------------------- | ----------- | --------------------- | --------------------- | ---------------- | ---------------------- |------------ | ---------------------- | ---------------------- |
{%         for ethernet_interface in flexencap_interfaces %}
{%             set description = ethernet_interface.description | arista.avd.default("-") %}
{%             set vlan_id = ethernet_interface.vlan_id | arista.avd.default('-') %}
{%             set client_encapsulation = ethernet_interface.encapsulation_vlan.client.encapsulation | arista.avd.default('-') %}
{# The below if condition is to get client encapsulation from deprecated keys #}
{# TODO: AVD6.0 below if block should be removed once the 'ethernet_interface.encapsulation_vlan.client.dot1q' and 'ethernet_interface.encapsulation_vlan.client.unmatched' are removed in AVD6.0 #}
{%             if client_encapsulation == '-' %}
{%                 if ethernet_interface.encapsulation_vlan.client.dot1q is arista.avd.defined %}
{%                     set client_encapsulation = 'dot1q' %}
{%                 elif ethernet_interface.encapsulation_vlan.client.unmatched is arista.avd.defined(true) %}
{%                     set client_encapsulation = 'unmatched' %}
{%                 endif %}
{%             endif %}
{%             if client_encapsulation in ['dot1q', 'dot1ad'] %}
{%                 set client_inner_encapsulation = ethernet_interface.encapsulation_vlan.client.inner_encapsulation | arista.avd.default('-') %}
{%                 set client_vlan = ethernet_interface.encapsulation_vlan.client.vlan | arista.avd.default(ethernet_interface.encapsulation_vlan.client.dot1q.vlan) %}
{%                 set client_outer_vlan = ethernet_interface.encapsulation_vlan.client.outer_vlan | arista.avd.default(ethernet_interface.encapsulation_vlan.client.dot1q.outer) %}
{%                 set client_inner_vlan = ethernet_interface.encapsulation_vlan.client.inner_vlan | arista.avd.default(ethernet_interface.encapsulation_vlan.client.dot1q.inner) %}
{%             endif %}
{%             set network_encapsulation = ethernet_interface.encapsulation_vlan.network.encapsulation | arista.avd.default('-') %}
{# The below if condition is to get network encapsulation from deprecated keys #}
{# TODO: AVD6.0 below if block should be removed once the 'ethernet_interface.encapsulation_vlan.network.dot1q' and 'ethernet_interface.encapsulation_vlan.network.client' are removed in AVD6.0 #}
{%             if network_encapsulation == '-' %}
{%                 if ethernet_interface.encapsulation_vlan.network.dot1q is arista.avd.defined %}
{%                     set network_encapsulation = 'dot1q' %}
{%                 elif ethernet_interface.encapsulation_vlan.network.client is arista.avd.defined(true) %}
{%                     set network_encapsulation = 'client' %}
{%                 endif %}
{%             endif %}
{%             if network_encapsulation in ['dot1q', 'dot1ad'] %}
{%                 set network_inner_encapsulation = ethernet_interface.encapsulation_vlan.network.inner_encapsulation | arista.avd.default('-') %}
{%                 set network_vlan = ethernet_interface.encapsulation_vlan.network.vlan | arista.avd.default(ethernet_interface.encapsulation_vlan.network.dot1q.vlan) %}
{%                 set network_outer_vlan = ethernet_interface.encapsulation_vlan.network.outer_vlan | arista.avd.default(ethernet_interface.encapsulation_vlan.network.dot1q.outer) %}
{%                 set network_inner_vlan = ethernet_interface.encapsulation_vlan.network.inner_vlan | arista.avd.default(ethernet_interface.encapsulation_vlan.network.dot1q.inner) %}
{%             endif %}
| {{ ethernet_interface.name }} | {{ description }} | {{ vlan_id }} | {{ client_encapsulation }} | {{ client_inner_encapsulation | arista.avd.default('-') }} | {{ client_vlan | arista.avd.default('-') }} | {{ client_outer_vlan | arista.avd.default('-') }} | {{ client_inner_vlan | arista.avd.default('-') }} | {{ network_encapsulation }} | {{ network_inner_encapsulation | arista.avd.default('-') }} | {{ network_vlan | arista.avd.default('-') }} | {{ network_outer_vlan | arista.avd.default('-') }} | {{ network_inner_vlan | arista.avd.default('-') }} |
{%         endfor %}
{%     endif %}
{# PVLAN #}
{%     set ethernet_interface_pvlan = namespace() %}
{%     set ethernet_interface_pvlan.configured = false %}
{%     for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%         if ethernet_interface.pvlan_mapping is arista.avd.defined or
            ethernet_interface.trunk_private_vlan_secondary is arista.avd.defined or
            ethernet_interface.switchport.pvlan_mapping is arista.avd.defined or
            ethernet_interface.switchport.trunk.private_vlan_secondary is arista.avd.defined %}
{%             set ethernet_interface_pvlan.configured = true %}
{%             break %}
{%         endif %}
{%     endfor %}
{%     if ethernet_interface_pvlan.configured == true %}

##### Private VLAN

| Interface | PVLAN Mapping | Secondary Trunk |
| --------- | ------------- | ----------------|
{%         for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%             set row_pvlan_mapping = ethernet_interface.switchport.pvlan_mapping | arista.avd.default(ethernet_interface.pvlan_mapping, '-') %}
{%             set row_trunk_private_vlan_secondary = ethernet_interface.switchport.trunk.private_vlan_secondary | arista.avd.default(ethernet_interface.trunk_private_vlan_secondary, '-') %}
{%             if row_pvlan_mapping != '-' or row_trunk_private_vlan_secondary != '-' %}
| {{ ethernet_interface.name }} | {{ row_pvlan_mapping }} | {{ row_trunk_private_vlan_secondary }} |
{%             endif %}
{%         endfor %}
{%     endif %}
{# VLAN Translations #}
{%     set ethernet_interface_vlan_xlate = namespace() %}
{%     set ethernet_interface_vlan_xlate.configured = false %}
{%     for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%         if ethernet_interface.switchport.vlan_translations is arista.avd.defined or
            ethernet_interface.vlan_translations is arista.avd.defined %}
{%             set ethernet_interface_vlan_xlate.configured = true %}
{%             break %}
{%         endif %}
{%     endfor %}
{%     if ethernet_interface_vlan_xlate.configured == true %}

##### VLAN Translations

| Interface | Direction | From VLAN ID(s) | To VLAN ID | From Inner VLAN ID | To Inner VLAN ID | Network | Dot1q-tunnel |
| --------- | --------- | --------------- | ---------- | ------------------ | ---------------- | ------- | ------------ |
{%         for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%             if ethernet_interface.switchport.vlan_translations is arista.avd.defined %}
{%                 for vlan_translation in ethernet_interface.switchport.vlan_translations.direction_both | arista.avd.natural_sort('from') %}
| {{ ethernet_interface.name }} | both | {{ vlan_translation.from }} | {{ vlan_translation.to }} | {{ vlan_translation.inner_vlan_from | arista.avd.default('-') }} | - | {{ vlan_translation.network | arista.avd.default('-') }} | {{ vlan_translation.dot1q_tunnel | arista.avd.default('-') }} |
{%                 endfor %}
{%                 for vlan_translation in ethernet_interface.switchport.vlan_translations.direction_in | arista.avd.natural_sort('from') %}
| {{ ethernet_interface.name }} | in | {{ vlan_translation.from }} | {{ vlan_translation.to }} | {{ vlan_translation.inner_vlan_from | arista.avd.default('-') }} | - | {{ vlan_translation.network | arista.avd.default('-') }} | {{ vlan_translation.dot1q_tunnel | arista.avd.default('-') }} |
{%                 endfor %}
{%                 for vlan_translation in ethernet_interface.switchport.vlan_translations.direction_out | arista.avd.natural_sort('from') %}
{%                     if vlan_translation.dot1q_tunnel_to is arista.avd.defined %}
{%                         set dot1q_tunnel = "True" %}
{%                         set to_vlan_id = vlan_translation.dot1q_tunnel_to %}
{%                     else %}
{%                         set to_vlan_id = vlan_translation.to | arista.avd.default("-") %}
{%                     endif %}
| {{ ethernet_interface.name }} | out | {{ vlan_translation.from }} | {{ to_vlan_id }} | - | {{ vlan_translation.inner_vlan_to | arista.avd.default('-') }} | {{ vlan_translation.network | arista.avd.default('-') }} | {{ dot1q_tunnel | arista.avd.default('-') }} |
{%                 endfor %}
{%             elif ethernet_interface.vlan_translations is arista.avd.defined %}
{%                 for vlan_translation in ethernet_interface.vlan_translations | arista.avd.natural_sort %}
{%                     if vlan_translation.from is arista.avd.defined and vlan_translation.to is arista.avd.defined %}
{%                         set row_direction = vlan_translation.direction | arista.avd.default('both') %}
| {{ ethernet_interface.name }} | {{ row_direction }} | {{ vlan_translation.from }} | {{ vlan_translation.to }} | - | - | - | - |
{%                     endif %}
{%                 endfor %}
{%             endif %}
{%         endfor %}
{%     endif %}
{# TCP MSS Clamping #}
{%     set tcp_mss_clampings = [] %}
{%     for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%         if ethernet_interface.tcp_mss_ceiling is arista.avd.defined %}
{%             do tcp_mss_clampings.append(ethernet_interface) %}
{%         endif %}
{%     endfor %}
{%     if tcp_mss_clampings | length > 0 %}

##### TCP MSS Clamping

| Interface | Ipv4 Segment Size | Ipv6 Segment Size | Direction |
| --------- | ----------------- | ----------------- | --------- |
{%         for tcp_mss_clamping in tcp_mss_clampings | arista.avd.natural_sort('name') %}
{%             set interface = tcp_mss_clamping.name %}
{%             if tcp_mss_clamping.tcp_mss_ceiling.ipv4_segment_size is arista.avd.defined %}
{%                 set ipv4_segment_size = tcp_mss_clamping.tcp_mss_ceiling.ipv4_segment_size %}
{%             endif %}
{%             if tcp_mss_clamping.tcp_mss_ceiling.ipv6_segment_size is arista.avd.defined %}
{%                 set ipv6_segment_size = tcp_mss_clamping.tcp_mss_ceiling.ipv6_segment_size %}
{%             endif %}
| {{ interface }} | {{ ipv4_segment_size | arista.avd.default("-") }} | {{ ipv6_segment_size | arista.avd.default("-") }} | {{ tcp_mss_clamping.tcp_mss_ceiling.direction | arista.avd.default("-") }} |
{%         endfor %}
{%     endif %}
{# Transceiver Settings #}
{%     set transceiver_settings = [] %}
{%     for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%         if ethernet_interface.transceiver is arista.avd.defined %}
{%             do transceiver_settings.append(ethernet_interface) %}
{%         endif %}
{%     endfor %}
{%     if transceiver_settings | length > 0 %}

##### Transceiver Settings

| Interface | Transceiver Frequency | Media Override |
| --------- | --------------------- | -------------- |
{%         for transceiver_setting in transceiver_settings | arista.avd.natural_sort('name') %}
{%             set interface = transceiver_setting.name %}
{%             if transceiver_setting.transceiver.frequency is arista.avd.defined %}
{%                 set frequency = "%.3f" | format(transceiver_setting.transceiver.frequency | float) %}
{%                 if transceiver_setting.transceiver.frequency_unit is arista.avd.defined %}
{%                     set frequency = frequency ~ ' ' ~ transceiver_setting.transceiver.frequency_unit %}
{%                 endif %}
{%             else %}
{%                 set frequency = '-' %}
{%             endif %}
{%             set m_override = transceiver_setting.transceiver.media.override | arista.avd.default('-') %}
| {{ interface }} | {{ frequency }} | {{ m_override }} |
{%         endfor %}
{%     endif %}
{# Link Tracking Groups #}
{%     set link_tracking_interfaces = [] %}
{%     for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%         if ethernet_interface.link_tracking_groups is arista.avd.defined %}
{%             do link_tracking_interfaces.append(ethernet_interface) %}
{%         endif %}
{%     endfor %}
{%     if link_tracking_interfaces | length > 0 %}

##### Link Tracking Groups

| Interface | Group Name | Direction |
| --------- | ---------- | --------- |
{%         for link_tracking_interface in link_tracking_interfaces %}
{%             for link_tracking_group in link_tracking_interface.link_tracking_groups | arista.avd.natural_sort('name') %}
{%                 if link_tracking_group.name is arista.avd.defined and link_tracking_group.direction is arista.avd.defined %}
| {{ link_tracking_interface.name }} | {{ link_tracking_group.name }} | {{ link_tracking_group.direction }} |
{%                 endif %}
{%             endfor %}
{%         endfor %}
{%     endif %}
{# Phone Interfaces #}
{%     set phone_interfaces = [] %}
{%     for interface in ethernet_interfaces | arista.avd.natural_sort('name') + port_channel_interfaces | arista.avd.natural_sort('name') %}
{%         if interface.switchport.phone is arista.avd.defined or interface.phone is arista.avd.defined %}
{%             do phone_interfaces.append(interface) %}
{%         endif %}
{%     endfor %}
{%     if phone_interfaces | length > 0 %}

##### Phone Interfaces

| Interface | Mode | Native VLAN | Phone VLAN | Phone VLAN Mode |
| --------- | ---- | ----------- | ---------- | --------------- |
{%         for phone_interface in phone_interfaces %}
{%             set mode = phone_interface.switchport.mode | arista.avd.default(phone_interface.mode, '-') %}
{%             set native_vlan = phone_interface.switchport.trunk.native_vlan | arista.avd.default(phone_interface.native_vlan, '-') %}
{%             set phone_vlan = phone_interface.switchport.phone.vlan | arista.avd.default(phone_interface.phone.vlan, '-') %}
{%             set phone_vlan_mode = phone_interface.switchport.phone.trunk | arista.avd.default(phone_interface.phone.trunk, '-') %}
| {{ phone_interface.name }} | {{ mode }} | {{ native_vlan }} | {{ phone_vlan }} | {{ phone_vlan_mode }} |
{%         endfor %}
{%     endif %}
{# Multicast Routing #}
{%     set multicast_interfaces = [] %}
{%     for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%         if ethernet_interface.multicast is arista.avd.defined %}
{%             do multicast_interfaces.append(ethernet_interface) %}
{%         endif %}
{%     endfor %}
{%     if multicast_interfaces | length > 0 %}

##### Multicast Routing

| Interface | IP Version | Static Routes Allowed | Multicast Boundaries |
| --------- | ---------- | --------------------- | -------------------- |
{%         for multicast_interface in multicast_interfaces %}
{%             if multicast_interface.multicast.ipv4 is arista.avd.defined %}
{%                 set static = multicast_interface.multicast.ipv4.static | arista.avd.default('-') %}
{%                 if multicast_interface.multicast.ipv4.boundaries is arista.avd.defined %}
{%                     set boundaries = multicast_interface.multicast.ipv4.boundaries | selectattr('boundary', 'arista.avd.defined') |
                                                                                        map(attribute='boundary') |
                                                                                        join(', ') %}
{%                 else %}
{%                     set boundaries = '-' %}
{%                 endif %}
| {{ multicast_interface.name }} | IPv4 | {{ static }} | {{ boundaries }} |
{%             endif %}
{%             if multicast_interface.multicast.ipv6 is arista.avd.defined %}
{%                 set static = multicast_interface.multicast.ipv6.static | arista.avd.default('-') %}
{%                 if multicast_interface.multicast.ipv6.boundaries is arista.avd.defined %}
{%                     set boundaries = multicast_interface.multicast.ipv6.boundaries | selectattr('boundary', 'arista.avd.defined') |
                                                                                        map(attribute='boundary') |
                                                                                        join(', ') %}
{%                 else %}
{%                     set boundaries = '-' %}
{%                 endif %}
| {{ multicast_interface.name }} | IPv6 | {{ static }} | {{ boundaries }} |
{%             endif %}
{%         endfor %}
{%     endif %}
{# IPv4 #}
{%     set ethernet_interface_ipv4 = namespace() %}
{%     set ethernet_interface_ipv4.configured = false %}
{%     for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%         if ethernet_interface.ip_address is arista.avd.defined %}
{%             set ethernet_interface_ipv4.configured = true %}
{%             break %}
{%         endif %}
{%     endfor %}
{%     set port_channel_interface_ipv4 = namespace() %}
{%     set port_channel_interface_ipv4.configured = false %}
{%     for port_channel_interface in port_channel_interfaces | arista.avd.natural_sort('name') %}
{%         if port_channel_interface.ip_address is arista.avd.defined %}
{%             set port_channel_interface_ipv4.configured = true %}
{%             break %}
{%         endif %}
{%     endfor %}
{%     if ethernet_interface_ipv4.configured == true or port_channel_interface_ipv4.configured == true %}

##### IPv4

| Interface | Description | Channel Group | IP Address | VRF |  MTU | Shutdown | ACL In | ACL Out |
| --------- | ----------- | ------------- | ---------- | ----| ---- | -------- | ------ | ------- |
{%         for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%             if ethernet_interface.channel_group.id is arista.avd.defined %}
{%                 set port_channel_interface_name = 'Port-Channel' ~ ethernet_interface.channel_group.id %}
{%                 set port_channel_interface = port_channel_interfaces | arista.avd.default([]) |
                                                                          selectattr('name', 'arista.avd.defined', port_channel_interface_name) |
                                                                          first %}
{%                 if port_channel_interface.ip_address is arista.avd.defined %}
{%                     set description = ethernet_interface.description | arista.avd.default("-") %}
{%                     set channel_group = ethernet_interface.channel_group.id | arista.avd.default("-") %}
{%                     set ip_address = port_channel_interface.ip_address | arista.avd.default("-") %}
{%                     set vrf = port_channel_interface.vrf | arista.avd.default("*default") %}
{%                     set mtu = port_channel_interface.mtu | arista.avd.default("*-") %}
{%                     set shutdown = port_channel_interface.shutdown | arista.avd.default("*-") %}
{%                     set acl_in = port_channel_interface.access_group_in | arista.avd.default("*-") %}
{%                     set acl_out = port_channel_interface.access_group_out | arista.avd.default("*-") %}
| {{ ethernet_interface.name }} | {{ description }} | {{ channel_group }} | *{{ ip_address }} | *{{ vrf }} | *{{ mtu }} | *{{ shutdown }} | *{{ acl_in }} | *{{ acl_out }} |
{%                 endif %}
{%             else %}
{%                 if ethernet_interface.ip_address is arista.avd.defined %}
{%                     set description = ethernet_interface.description | arista.avd.default("-") %}
{%                     set ip_address = ethernet_interface.ip_address | arista.avd.default("-") %}
{%                     set vrf = ethernet_interface.vrf | arista.avd.default("default") %}
{%                     set mtu = ethernet_interface.mtu | arista.avd.default("-") %}
{%                     set shutdown = ethernet_interface.shutdown | arista.avd.default("-") %}
{%                     set acl_in = ethernet_interface.access_group_in | arista.avd.default("-") %}
{%                     set acl_out = ethernet_interface.access_group_out | arista.avd.default("-") %}
| {{ ethernet_interface.name }} | {{ description }} | - | {{ ip_address }} | {{ vrf }} | {{ mtu }} | {{ shutdown }} | {{ acl_in }} | {{ acl_out }} |
{%                 endif %}
{%             endif %}
{%         endfor %}
{%     endif %}
{%     if port_channel_interface_ipv4.configured == true %}

*Inherited from Port-Channel Interface
{%     endif %}
{# IP NAT Documentation #}
{%     set ip_nat_interfaces = ethernet_interfaces %}
{%     include 'documentation/interfaces-ip-nat.j2' %}
{# IPv6 #}
{%     set ethernet_interface_ipv6 = namespace() %}
{%     set ethernet_interface_ipv6.configured = false %}
{%     for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%         if ethernet_interface.ipv6_address is arista.avd.defined or ethernet_interface.ipv6_enable is arista.avd.defined(true) %}
{%             set ethernet_interface_ipv6.configured = true %}
{%             break %}
{%         endif %}
{%     endfor %}
{%     set port_channel_interface_ipv6 = namespace() %}
{%     set port_channel_interface_ipv6.configured = false %}
{%     for port_channel_interface in port_channel_interfaces | arista.avd.natural_sort('name') %}
{%         if port_channel_interface.ipv6_address is arista.avd.defined or port_channel_interface.ipv6_enable is arista.avd.defined(true) %}
{%             set port_channel_interface_ipv6.configured = true %}
{%             break %}
{%         endif %}
{%     endfor %}
{%     if ethernet_interface_ipv6.configured == true or port_channel_interface_ipv6.configured == true %}

##### IPv6

| Interface | Description | Channel Group | IPv6 Address | VRF | MTU | Shutdown | ND RA Disabled | Managed Config Flag | IPv6 ACL In | IPv6 ACL Out |
| --------- | ----------- | --------------| ------------ | --- | --- | -------- | -------------- | -------------------| ----------- | ------------ |
{%         for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%             if ethernet_interface.channel_group.id is arista.avd.defined %}
{%                 set port_channel_interface_name = 'Port-Channel' ~ ethernet_interface.channel_group.id %}
{%                 set port_channel_interface = port_channel_interfaces | arista.avd.default([]) |
                                                                          selectattr('name', 'arista.avd.defined', port_channel_interface_name) |
                                                                          first %}
{%                 if port_channel_interface.ipv6_address is arista.avd.defined or port_channel_interface.ipv6_enable is arista.avd.defined(true) %}
{%                     set description = ethernet_interface.description | arista.avd.default("-") %}
{%                     set channel_group = ethernet_interface.channel_group.id | arista.avd.default("-") %}
{%                     set ipv6_address = port_channel_interface.ipv6_address | arista.avd.default("-") %}
{%                     set vrf = port_channel_interface.vrf | arista.avd.default("default") %}
{%                     set mtu = port_channel_interface.mtu | arista.avd.default("-") %}
{%                     set shutdown = port_channel_interface.shutdown | arista.avd.default("-") %}
{%                     set nd_ra_disabled = port_channel_interface.ipv6_nd_ra_disabled | arista.avd.default("-") %}
{%                     set managed_config_flag = port_channel_interface.ipv6_nd_managed_config_flag | arista.avd.default("-") %}
{%                     set ipv6_acl_in = port_channel_interface.ipv6_access_group_in | arista.avd.default("-") %}
{%                     set ipv6_acl_out = port_channel_interface.ipv6_access_group_out | arista.avd.default("-") %}
| {{ ethernet_interface.name }} | {{ description }} | {{ channel_group }} | *{{ ipv6_address }} | *{{ vrf }} | *{{ mtu }} | *{{ shutdown }} | *{{ nd_ra_disabled }} | *{{ managed_config_flag }} | *{{ ipv6_acl_in }} | *{{ ipv6_acl_out }} |
{%                 endif %}
{%             else %}
{%                 if ethernet_interface.ipv6_address is arista.avd.defined or ethernet_interface.ipv6_enable is arista.avd.defined(true) %}
{%                     set description = ethernet_interface.description | arista.avd.default("-") %}
{%                     set ipv6_address = ethernet_interface.ipv6_address | arista.avd.default("-") %}
{%                     set vrf = ethernet_interface.vrf | arista.avd.default("default") %}
{%                     set mtu = ethernet_interface.mtu | arista.avd.default("-") %}
{%                     set shutdown = ethernet_interface.shutdown | arista.avd.default("-") %}
{%                     set nd_ra_disabled = ethernet_interface.ipv6_nd_ra_disabled | arista.avd.default("-") %}
{%                     set managed_config_flag = ethernet_interface.ipv6_nd_managed_config_flag | arista.avd.default("-") %}
{%                     set ipv6_acl_in = ethernet_interface.ipv6_access_group_in | arista.avd.default("-") %}
{%                     set ipv6_acl_out = ethernet_interface.ipv6_access_group_out | arista.avd.default("-") %}
| {{ ethernet_interface.name }} | {{ description }} | - | {{ ipv6_address }} | {{ vrf }} | {{ mtu }} | {{ shutdown }} | {{ nd_ra_disabled }} | {{ managed_config_flag }} | {{ ipv6_acl_in }} | {{ ipv6_acl_out }} |
{%                 endif %}
{%             endif %}
{%         endfor %}
{%     endif %}
{%     if port_channel_interface_ipv6.configured == true %}

*Inherited from Port-Channel Interface
{%     endif %}
{# ISIS #}
{%     set ethernet_interfaces_isis = [] %}
{%     for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%         if ethernet_interface.isis_enable is arista.avd.defined or
               ethernet_interface.isis_bfd is arista.avd.defined or
               ethernet_interface.isis_metric is arista.avd.defined or
               ethernet_interface.isis_circuit_type is arista.avd.defined or
               ethernet_interface.isis_network_point_to_point is arista.avd.defined or
               ethernet_interface.isis_passive is arista.avd.defined or
               ethernet_interface.isis_hello_padding is arista.avd.defined or
               ethernet_interface.isis_authentication_mode is arista.avd.defined %}
{%             do ethernet_interfaces_isis.append(ethernet_interface) %}
{%         endif %}
{%     endfor %}
{%     set port_channel_interfaces_isis = [] %}
{%     for port_channel_interface in port_channel_interfaces | arista.avd.natural_sort('name') %}
{%         if port_channel_interface.isis_enable is arista.avd.defined or
               port_channel_interface.isis_bfd is arista.avd.defined or
               port_channel_interface.isis_metric is arista.avd.defined or
               port_channel_interface.isis_circuit_type is arista.avd.defined or
               port_channel_interface.isis_network_point_to_point is arista.avd.defined or
               port_channel_interface.isis_passive is arista.avd.defined or
               port_channel_interface.isis_hello_padding is arista.avd.defined or
               port_channel_interface.isis_authentication_mode is arista.avd.defined %}
{%             do port_channel_interfaces_isis.append(port_channel_interface) %}
{%         endif %}
{%     endfor %}
{# VRRP #}
{%     set ethernet_interfaces_vrrp_details = [] %}
{%     for ethernet_interface in ethernet_interfaces | arista.avd.default([]) %}
{%         if ethernet_interface.vrrp_ids is arista.avd.defined %}
{%             do ethernet_interfaces_vrrp_details.append(ethernet_interface) %}
{%         endif %}
{%     endfor %}
{%     if ethernet_interfaces_vrrp_details | length > 0 %}

##### VRRP Details

| Interface | VRRP-ID | Priority | Advertisement Interval | Preempt | Tracked Object Name(s) | Tracked Object Action(s) | IPv4 Virtual IP | IPv4 VRRP Version | IPv6 Virtual IP |
| --------- | ------- | -------- | ---------------------- | --------| ---------------------- | ------------------------ | --------------- | ----------------- | --------------- |
{%         for ethernet_interface in ethernet_interfaces_vrrp_details | arista.avd.natural_sort('name') %}
{%             for vrid in ethernet_interface.vrrp_ids if vrid.id is arista.avd.defined %}
{%                 set row_id = vrid.id %}
{%                 set row_prio_level = vrid.priority_level | arista.avd.default('-') %}
{%                 set row_ad_interval = vrid.advertisement.interval | arista.avd.default('-') %}
{%                 set row_preempt = "Enabled" %}
{%                 if vrid.preempt.enabled is arista.avd.defined(false) %}
{%                     set row_preempt = "Disabled" %}
{%                 endif %}
{%                 if vrid.tracked_object is arista.avd.defined %}
{%                     set row_tracked_object_name = [] %}
{%                     set row_tracked_object_action = [] %}
{%                     for tracked_obj in vrid.tracked_object | arista.avd.natural_sort('name') %}
{%                         do row_tracked_object_name.append(tracked_obj.name) %}
{%                         if tracked_obj.shutdown is arista.avd.defined(true) %}
{%                             do row_tracked_object_action.append("Shutdown") %}
{%                         elif tracked_obj.decrement is arista.avd.defined %}
{%                             do row_tracked_object_action.append("Decrement " ~ tracked_obj.decrement) %}
{%                         endif %}
{%                     endfor %}
{%                     set row_tracked_object_name = row_tracked_object_name | join(", ") %}
{%                     set row_tracked_object_action = row_tracked_object_action | join(", ") %}
{%                 endif %}
{%                 set row_ipv4_virt = vrid.ipv4.address | arista.avd.default('-') %}
{%                 set row_ipv4_vers = vrid.ipv4.version | arista.avd.default('2') %}
{%                 set row_ipv6_virt = vrid.ipv6.address | arista.avd.default('-') %}
| {{ ethernet_interface.name }} | {{ row_id }} | {{ row_prio_level }} | {{ row_ad_interval }} | {{ row_preempt }} | {{ row_tracked_object_name | arista.avd.default('-') }} | {{ row_tracked_object_action | arista.avd.default('-') }} | {{ row_ipv4_virt }} | {{ row_ipv4_vers }} | {{ row_ipv6_virt }} |
{%             endfor %}
{%         endfor %}
{%     endif %}
{%     if ethernet_interfaces_isis | length > 0 or port_channel_interfaces_isis | length > 0 %}

##### ISIS

| Interface | Channel Group | ISIS Instance | ISIS BFD | ISIS Metric | Mode | ISIS Circuit Type | Hello Padding | Authentication Mode |
| --------- | ------------- | ------------- | -------- | ----------- | ---- | ----------------- | ------------- | ------------------- |
{%         for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%             if ethernet_interface.channel_group.id is arista.avd.defined %}
{%                 set port_channel_interface_name = 'Port-Channel' ~ ethernet_interface.channel_group.id %}
{%                 set port_channel_interface = port_channel_interfaces_isis | selectattr('name', 'arista.avd.defined', port_channel_interface_name) |
                                                                               first %}
{%                 if port_channel_interface is arista.avd.defined %}
{%                     set channel_group = ethernet_interface.channel_group.id | arista.avd.default("-") %}
{%                     set isis_instance = port_channel_interface.isis_enable | arista.avd.default("-") %}
{%                     set isis_bfd = port_channel_interface.isis_bfd | arista.avd.default("-") %}
{%                     set isis_metric = port_channel_interface.isis_metric | arista.avd.default("-") %}
{%                     set isis_circuit_type = port_channel_interface.isis_circuit_type | arista.avd.default("-") %}
{%                     set isis_hello_padding = port_channel_interface.isis_hello_padding | arista.avd.default("-") %}
{%                     set isis_authentication_mode = port_channel_interface.isis_authentication_mode | arista.avd.default("-") %}
{%                     if port_channel_interface.isis_network_point_to_point is arista.avd.defined(true) %}
{%                         set mode = "point-to-point" %}
{%                     elif port_channel_interface.isis_passive is arista.avd.defined(true) %}
{%                         set mode = "passive" %}
{%                     else %}
{%                         set mode = "-" %}
{%                     endif %}
| {{ ethernet_interface.name }} | {{ channel_group }} | *{{ isis_instance }} | {{ isis_bfd }} | *{{ isis_metric }} | *{{ mode }} | *{{ isis_circuit_type }} | *{{ isis_hello_padding }} | *{{ isis_authentication_mode }} |
{%                 endif %}
{%             else %}
{%                 if ethernet_interface in ethernet_interfaces_isis %}
{%                     set channel_group = ethernet_interface.channel_group.id | arista.avd.default("-") %}
{%                     set isis_instance = ethernet_interface.isis_enable | arista.avd.default("-") %}
{%                     set isis_bfd = ethernet_interface.isis_bfd | arista.avd.default("-") %}
{%                     set isis_metric = ethernet_interface.isis_metric | arista.avd.default("-") %}
{%                     set isis_circuit_type = ethernet_interface.isis_circuit_type | arista.avd.default("-") %}
{%                     set isis_hello_padding = ethernet_interface.isis_hello_padding | arista.avd.default("-") %}
{%                     set isis_authentication_mode = ethernet_interface.isis_authentication_mode | arista.avd.default("-") %}
{%                     if ethernet_interface.isis_network_point_to_point is arista.avd.defined(true) %}
{%                         set mode = "point-to-point" %}
{%                     elif ethernet_interface.isis_passive is arista.avd.defined(true) %}
{%                         set mode = "passive" %}
{%                     else %}
{%                         set mode = "-" %}
{%                     endif %}
| {{ ethernet_interface.name }} | {{ channel_group }} | {{ isis_instance }} | {{ isis_bfd }} | {{ isis_metric }} | {{ mode }} | {{ isis_circuit_type }} | {{ isis_hello_padding }} | {{ isis_authentication_mode }} |
{%                 endif %}
{%             endif %}
{%         endfor %}
{%     endif %}
{%     if port_channel_interfaces_isis | length > 0 %}

*Inherited from Port-Channel Interface
{%     endif %}
{# EVPN Multihoming #}
{%     set evpn_es_ethernet_interfaces = [] %}
{%     set evpn_dfe_ethernet_interfaces = [] %}
{%     set evpn_mpls_ethernet_interfaces = [] %}
{%     for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%         if ethernet_interface.evpn_ethernet_segment is arista.avd.defined %}
{%             do evpn_es_ethernet_interfaces.append(ethernet_interface) %}
{%             if ethernet_interface.evpn_ethernet_segment.designated_forwarder_election is arista.avd.defined %}
{%                 do evpn_dfe_ethernet_interfaces.append(ethernet_interface) %}
{%             endif %}
{%             if ethernet_interface.evpn_ethernet_segment.mpls is arista.avd.defined %}
{%                 do evpn_mpls_ethernet_interfaces.append(ethernet_interface) %}
{%             endif %}
{%         endif %}
{%     endfor %}
{%     if evpn_es_ethernet_interfaces | length > 0 %}

##### EVPN Multihoming

####### EVPN Multihoming Summary

| Interface | Ethernet Segment Identifier | Multihoming Redundancy Mode | Route Target |
| --------- | --------------------------- | --------------------------- | ------------ |
{%         for evpn_es_ethernet_interface in evpn_es_ethernet_interfaces %}
{%             set esi = evpn_es_ethernet_interface.evpn_ethernet_segment.identifier | arista.avd.default("-") %}
{%             set redundancy = evpn_es_ethernet_interface.evpn_ethernet_segment.redundancy | arista.avd.default("all-active") %}
{%             set rt = evpn_es_ethernet_interface.evpn_ethernet_segment.route_target | arista.avd.default("-") %}
| {{ evpn_es_ethernet_interface.name }} | {{ esi }} | {{ redundancy }} | {{ rt }} |
{%         endfor %}
{%         if evpn_dfe_ethernet_interfaces | length > 0 %}

####### Designated Forwarder Election Summary

| Interface | Algorithm | Preference Value | Dont Preempt | Hold time | Subsequent Hold Time | Candidate Reachability Required |
| --------- | --------- | ---------------- | ------------ | --------- | -------------------- | ------------------------------- |
{%             for evpn_dfe_ethernet_interface in evpn_dfe_ethernet_interfaces %}
{%                 set df_eth_settings = evpn_dfe_ethernet_interface.evpn_ethernet_segment.designated_forwarder_election %}
{%                 set algorithm = df_eth_settings.algorithm | arista.avd.default("modulus") %}
{%                 set pref_value = df_eth_settings.preference_value | arista.avd.default("-") %}
{%                 set dont_preempt = df_eth_settings.dont_preempt | arista.avd.default(false) %}
{%                 set hold_time = df_eth_settings.hold_time | arista.avd.default("-") %}
{%                 set subsequent_hold_time = df_eth_settings.subsequent_hold_time | arista.avd.default("-") %}
{%                 set candidate_reachability = df_eth_settings.candidate_reachability_required | arista.avd.default(false) %}
| {{ evpn_dfe_ethernet_interface.name }} | {{ algorithm }} | {{ pref_value }} | {{ dont_preempt }} | {{ hold_time }} | {{ subsequent_hold_time }} | {{ candidate_reachability }} |
{%             endfor %}
{%         endif %}
{%         if evpn_mpls_ethernet_interfaces | length > 0 %}

####### EVPN-MPLS summary

| Interface | Shared Index | Tunnel Flood Filter Time |
| --------- | ------------ | ------------------------ |
{%             for evpn_mpls_ethernet_interface in evpn_mpls_ethernet_interfaces %}
{%                 set shared_index = evpn_mpls_ethernet_interface.evpn_ethernet_segment.mpls.shared_index | arista.avd.default("-") %}
{%                 set tff_time = evpn_mpls_ethernet_interface.evpn_ethernet_segment.mpls.tunnel_flood_filter_time | arista.avd.default("-") %}
| {{ evpn_mpls_ethernet_interface.name }} | {{ shared_index }} | {{ tff_time }} |
{%             endfor %}
{%         endif %}
{%     endif %}
{%     set err_cor_enc_intfs = [] %}
{%     for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%         if ethernet_interface.error_correction_encoding is arista.avd.defined %}
{%             do err_cor_enc_intfs.append(ethernet_interface) %}
{%         endif %}
{%     endfor %}
{%     if err_cor_enc_intfs | length > 0 %}

##### Error Correction Encoding Interfaces

| Interface | Enabled |
| --------- | ------- |
{%         for ethernet_interface in err_cor_enc_intfs %}
{%             if ethernet_interface.error_correction_encoding.enabled is arista.avd.defined(false) %}
{%                 set enabled = ['Disabled'] %}
{%             else %}
{%                 set enabled = [] %}
{%                 if ethernet_interface.error_correction_encoding.fire_code is arista.avd.defined(true) %}
{%                     do enabled.append('fire-code') %}
{%                 endif %}
{%                 if ethernet_interface.error_correction_encoding.reed_solomon is arista.avd.defined(true) %}
{%                     do enabled.append('reed-solomon') %}
{%                 endif %}
{%             endif %}
| {{ ethernet_interface.name }} | {{ enabled | join('<br>') }} |
{%         endfor %}
{%     endif %}
{%     set priority_intfs = [] %}
{%     for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%         if ethernet_interface.priority_flow_control.enabled is arista.avd.defined %}
{%             do priority_intfs.append(ethernet_interface) %}
{%         endif %}
{%     endfor %}
{%     if priority_intfs | length > 0 %}

#### Priority Flow Control

| Interface | PFC | Priority | Drop/No_drop |
{%         for priority_intf in priority_intfs %}
{%             if priority_intf.priority_flow_control.priorities is arista.avd.defined %}
{%                 for priority_block in priority_intf.priority_flow_control.priorities | arista.avd.natural_sort %}
{%                     set priority = priority_block.priority | arista.avd.default("-") %}
{%                     set drop_no_drop = priority_block.no_drop | arista.avd.default("-") %}
| {{ priority_intf.name }} | {{ priority_intf.priority_flow_control.enabled }} | {{ priority }} | {{ drop_no_drop }} |
{%                 endfor %}
{%             else %}
| {{ priority_intf.name }} | {{ priority_intf.priority_flow_control.enabled }} | - | - |
{%             endif %}
{%         endfor %}
{%     endif %}
{%     set sync_e_interfaces = [] %}
{%     for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort('name') %}
{%         if ethernet_interface.sync_e.enable is arista.avd.defined(true) %}
{%             do sync_e_interfaces.append(ethernet_interface) %}
{%         endif %}
{%     endfor %}
{%     if sync_e_interfaces | length > 0 %}

#### Synchronous Ethernet

| Interface | Priority |
| --------- | -------- |
{%         for sync_e_interface in sync_e_interfaces %}
| {{ sync_e_interface.name }} | {{ sync_e_interface.sync_e.priority | arista.avd.default('127') }} |
{%         endfor %}
{%     endif %}

#### Ethernet Interfaces Device Configuration

```eos
{%     include 'eos/ethernet-interfaces.j2' %}
```
{% endif %}
