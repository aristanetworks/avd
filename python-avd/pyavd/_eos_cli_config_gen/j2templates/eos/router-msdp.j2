{#
 Copyright (c) 2023-2024 Arista Networks, Inc.
 Use of this source code is governed by the Apache License 2.0
 that can be found in the LICENSE file.
#}
{# eos - Router MSDP #}
{% if router_msdp is arista.avd.defined %}
!
router msdp
{%     for group_limit in router_msdp.group_limits | arista.avd.default([]) %}
   group-limit {{ group_limit.limit }} source {{ group_limit.source_prefix }}
{%     endfor %}
{%     if router_msdp.originator_id_local_interface is arista.avd.defined %}
   originator-id local-interface {{ router_msdp.originator_id_local_interface }}
{%     endif %}
{%     if router_msdp.rejected_limit is arista.avd.defined %}
   rejected-limit {{ router_msdp.rejected_limit }}
{%     endif %}
{%     if router_msdp.forward_register_packets is arista.avd.defined(true) %}
   forward register-packets
{%     endif %}
{%     if router_msdp.connection_retry_interval is arista.avd.defined %}
   connection retry interval {{ router_msdp.connection_retry_interval }}
{%     endif %}
{%     for peer in router_msdp.peers | arista.avd.default([]) | arista.avd.natural_sort('ipv4_address') %}
{%         if peer.ipv4_address is arista.avd.defined %}
   !
   peer {{ peer.ipv4_address }}
{%             if peer.default_peer.enabled is arista.avd.defined(true) %}
{%                 set default_peer_cli = "default-peer" %}
{%                 if peer.default_peer.prefix_list is arista.avd.defined %}
{%                     set default_peer_cli = default_peer_cli ~ " prefix-list " ~ peer.default_peer.prefix_list %}
{%                 endif %}
      {{ default_peer_cli }}
{%             endif %}
{%             for mesh_group in peer.mesh_groups | arista.avd.default([]) | arista.avd.natural_sort('name') %}
{%                 if mesh_group.name is arista.avd.defined %}
      mesh-group {{ mesh_group.name }}
{%                 endif %}
{%             endfor %}
{%             if peer.local_interface is arista.avd.defined %}
      local-interface {{ peer.local_interface }}
{%             endif %}
{%             if peer.keepalive.keepalive_timer is arista.avd.defined and peer.keepalive.hold_timer is arista.avd.defined %}
      keepalive {{ peer.keepalive.keepalive_timer }} {{ peer.keepalive.hold_timer }}
{%             endif %}
{%             if peer.sa_filter.in_list is arista.avd.defined %}
      sa-filter in list {{ peer.sa_filter.in_list }}
{%             endif %}
{%             if peer.sa_filter.out_list is arista.avd.defined %}
      sa-filter out list {{ peer.sa_filter.out_list }}
{%             endif %}
{%             if peer.description is arista.avd.defined %}
      description {{ peer.description }}
{%             endif %}
{%             if peer.disabled is arista.avd.defined(true) %}
      disabled
{%             endif %}
{%             if peer.sa_limit is arista.avd.defined %}
      sa-limit {{ peer.sa_limit }}
{%             endif %}
{%         endif %}
{%     endfor %}
{%     for vrf in  router_msdp.vrfs | arista.avd.default([]) | arista.avd.natural_sort('name') %}
{%         if vrf.name is arista.avd.defined and vrf.name != "default" %}
   !
   vrf {{ vrf.name }}
{%             for group_limit in vrf.group_limits | arista.avd.default([]) | arista.avd.natural_sort('source_prefix') %}
      group-limit {{ group_limit.limit }} source {{ group_limit.source_prefix }}
{%             endfor %}
{%             if vrf.originator_id_local_interface is arista.avd.defined %}
      originator-id local-interface {{ vrf.originator_id_local_interface }}
{%             endif %}
{%             if vrf.rejected_limit is arista.avd.defined %}
      rejected-limit {{ vrf.rejected_limit }}
{%             endif %}
{%             if vrf.forward_register_packets is arista.avd.defined(true) %}
      forward register-packets
{%             endif %}
{%             if vrf.connection_retry_interval is arista.avd.defined %}
      connection retry interval {{ vrf.connection_retry_interval }}
{%             endif %}
{%             for peer in vrf.peers | arista.avd.default([]) | arista.avd.natural_sort('ipv4_address') %}
      !
      peer {{ peer.ipv4_address }}
{%                 if peer.default_peer.enabled is arista.avd.defined(true) %}
{%                     set default_peer_cli = "default-peer" %}
{%                     if peer.default_peer.prefix_list is arista.avd.defined %}
{%                         set default_peer_cli = default_peer_cli ~ " prefix-list " ~ peer.default_peer.prefix_list %}
{%                     endif %}
         {{ default_peer_cli }}
{%                 endif %}
{%                 for mesh_group in peer.mesh_groups | arista.avd.default([]) %}
{%                     if mesh_group.name is arista.avd.defined %}
         mesh-group {{ mesh_group.name }}
{%                     endif %}
{%                 endfor %}
{%                 if peer.local_interface is arista.avd.defined %}
         local-interface {{ peer.local_interface }}
{%                 endif %}
{%                 if peer.keepalive.keepalive_timer is arista.avd.defined and peer.keepalive.hold_timer is arista.avd.defined %}
         keepalive {{ peer.keepalive.keepalive_timer }} {{ peer.keepalive.hold_timer }}
{%                 endif %}
{%                 if peer.sa_filter.in_list is arista.avd.defined %}
         sa-filter in list {{ peer.sa_filter.in_list }}
{%                 endif %}
{%                 if peer.sa_filter.out_list is arista.avd.defined %}
         sa-filter out list {{ peer.sa_filter.out_list }}
{%                 endif %}
{%                 if peer.description is arista.avd.defined %}
         description {{ peer.description }}
{%                 endif %}
{%                 if peer.disabled is arista.avd.defined(true) %}
         disabled
{%                 endif %}
{%                 if peer.sa_limit is arista.avd.defined %}
         sa-limit {{ peer.sa_limit }}
{%                 endif %}
{%             endfor %}
{%         endif %}
{%     endfor %}
{% endif %}
