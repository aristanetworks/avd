{#
 Copyright (c) 2023-2024 Arista Networks, Inc.
 Use of this source code is governed by the Apache License 2.0
 that can be found in the LICENSE file.
#}
{# eos - vlan interfaces #}
{% for vlan_interface in vlan_interfaces | arista.avd.natural_sort('name') %}
!
interface {{ vlan_interface.name }}
{%     if vlan_interface.description is arista.avd.defined %}
   description {{ vlan_interface.description }}
{%     endif %}
{%     if vlan_interface.shutdown is arista.avd.defined(true) %}
   shutdown
{%     elif vlan_interface.shutdown is arista.avd.defined(false) %}
   no shutdown
{%     endif %}
{%     if vlan_interface.mtu is arista.avd.defined %}
   mtu {{ vlan_interface.mtu }}
{%     endif %}
{%     if vlan_interface.no_autostate is arista.avd.defined(true) %}
   no autostate
{%     endif %}
{%     if vlan_interface.vrf is arista.avd.defined %}
   vrf {{ vlan_interface.vrf }}
{%     endif %}
{%     if vlan_interface.logging.event.link_status is arista.avd.defined(true) %}
   logging event link-status
{%     elif vlan_interface.logging.event.link_status is arista.avd.defined(false) %}
   no logging event link-status
{%     endif %}
{%     if vlan_interface.arp_aging_timeout is arista.avd.defined %}
   arp aging timeout {{ vlan_interface.arp_aging_timeout }}
{%     endif %}
{%     if vlan_interface.arp_gratuitous_accept is arista.avd.defined(true) %}
   arp gratuitous accept
{%     endif %}
{%     if vlan_interface.arp_monitor_mac_address is arista.avd.defined(true) %}
   arp monitor mac-address
{%     endif %}
{%     if vlan_interface.arp_cache_dynamic_capacity is arista.avd.defined %}
   arp cache dynamic capacity {{ vlan_interface.arp_cache_dynamic_capacity }}
{%     endif %}
{%     if vlan_interface.ipv6_nd_cache is arista.avd.defined() %}
{%         if vlan_interface.ipv6_nd_cache.expire is arista.avd.defined() %}
   ipv6 nd cache expire {{ vlan_interface.ipv6_nd_cache.expire }}
{%         endif %}
{%         if vlan_interface.ipv6_nd_cache.dynamic_capacity is arista.avd.defined() %}
   ipv6 nd cache dynamic capacity {{ vlan_interface.ipv6_nd_cache.dynamic_capacity }}
{%         endif %}
{%         if vlan_interface.ipv6_nd_cache.refresh_always is arista.avd.defined(true) %}
   ipv6 nd cache refresh always
{%         endif %}
{%     endif %}
{%     if vlan_interface.ip_proxy_arp is arista.avd.defined(true) %}
   ip proxy-arp
{%     endif %}
{%     if vlan_interface.ip_directed_broadcast is arista.avd.defined(true) %}
   ip directed-broadcast
{%     endif %}
{%     if vlan_interface.ip_address is arista.avd.defined %}
   ip address {{ vlan_interface.ip_address }}
{%         if vlan_interface.ip_address_secondaries is arista.avd.defined %}
{%             for ip_address_secondary in vlan_interface.ip_address_secondaries %}
   ip address {{ ip_address_secondary }} secondary
{%             endfor %}
{%         endif %}
{%     endif %}
{%     if vlan_interface.ip_verify_unicast_source_reachable_via is arista.avd.defined %}
   ip verify unicast source reachable-via {{ vlan_interface.ip_verify_unicast_source_reachable_via }}
{%     endif %}
{%     if vlan_interface.ip_dhcp_relay_all_subnets is arista.avd.defined(true) %}
   ip dhcp relay all-subnets
{%     endif %}
{%     if vlan_interface.ipv6_dhcp_relay_all_subnets is arista.avd.defined(true) %}
   ipv6 dhcp relay all-subnets
{%     endif %}
{%     for ip_helper in vlan_interface.ip_helpers | arista.avd.natural_sort('ip_helper') %}
{%         set ip_helper_cli = "ip helper-address " ~ ip_helper.ip_helper %}
{%         if ip_helper.vrf is arista.avd.defined %}
{%             set ip_helper_cli = ip_helper_cli ~ " vrf " ~ ip_helper.vrf %}
{%         endif %}
{%         if ip_helper.source_interface is arista.avd.defined %}
{%             set ip_helper_cli = ip_helper_cli ~ " source-interface " ~ ip_helper.source_interface %}
{%         endif %}
   {{ ip_helper_cli }}
{%     endfor %}
{%     for destination in vlan_interface.ipv6_dhcp_relay_destinations | arista.avd.natural_sort('address') %}
{%         set destination_cli = "ipv6 dhcp relay destination " ~ destination.address %}
{%         if destination.vrf is arista.avd.defined %}
{%             set destination_cli = destination_cli ~ " vrf " ~ destination.vrf %}
{%         endif %}
{%         if destination.local_interface is arista.avd.defined %}
{%             set destination_cli = destination_cli ~ " local-interface " ~ destination.local_interface %}
{%         elif destination.source_address is arista.avd.defined %}
{%             set destination_cli = destination_cli ~ " source-address " ~ destination.source_address %}
{%         endif %}
{%         if destination.link_address is arista.avd.defined %}
{%             set destination_cli = destination_cli ~ " link-address " ~ destination.link_address %}
{%         endif %}
   {{ destination_cli }}
{%     endfor %}
{%     if vlan_interface.ipv6_attached_host_route_export.enabled is arista.avd.defined(true) %}
{%         set ipv6_attached_host_route_export_cli = "ipv6 attached-host route export" %}
{%         if vlan_interface.ipv6_attached_host_route_export.distance is arista.avd.defined %}
{%             set ipv6_attached_host_route_export_cli = ipv6_attached_host_route_export_cli ~ " " ~ vlan_interface.ipv6_attached_host_route_export.distance %}
{%         endif %}
{%         if vlan_interface.ipv6_attached_host_route_export.prefix_length is arista.avd.defined %}
{%             set ipv6_attached_host_route_export_cli = ipv6_attached_host_route_export_cli ~ " prefix-length " ~ vlan_interface.ipv6_attached_host_route_export.prefix_length %}
{%         endif %}
   {{ ipv6_attached_host_route_export_cli }}
{%     endif %}
{%     if vlan_interface.ip_igmp is arista.avd.defined(true) %}
   ip igmp
{%     endif %}
{%     if vlan_interface.ip_igmp_version is arista.avd.defined %}
   ip igmp version {{ vlan_interface.ip_igmp_version }}
{%     endif %}
{%     if vlan_interface.ip_igmp_host_proxy.enabled is arista.avd.defined(true) %}
{%         set host_proxy_cli =  "ip igmp host-proxy" %}
   {{ host_proxy_cli }}
{%         if vlan_interface.ip_igmp_host_proxy.groups is arista.avd.defined %}
{%             for proxy_group in vlan_interface.ip_igmp_host_proxy.groups %}
{%                 if proxy_group.exclude is arista.avd.defined or proxy_group.include is arista.avd.defined %}
{%                     if proxy_group.include is arista.avd.defined %}
{%                         for include_source in proxy_group.include %}
   {{ host_proxy_cli }} {{ proxy_group.group }} include {{ include_source.source }}
{%                         endfor %}
{%                     endif %}
{%                     if proxy_group.exclude is arista.avd.defined %}
{%                         for exclude_source in proxy_group.exclude %}
   {{ host_proxy_cli }} {{ proxy_group.group }} exclude {{ exclude_source.source }}
{%                         endfor %}
{%                     endif %}
{%                 elif proxy_group.group is arista.avd.defined %}
   {{ host_proxy_cli }} {{ proxy_group.group }}
{%                 endif %}
{%             endfor %}
{%         endif %}
{%         if vlan_interface.ip_igmp_host_proxy.access_lists is arista.avd.defined %}
{%             for access_list in vlan_interface.ip_igmp_host_proxy.access_lists %}
   {{ host_proxy_cli }} access-list {{ access_list.name }}
{%             endfor %}
{%         endif %}
{%         if vlan_interface.ip_igmp_host_proxy.report_interval is arista.avd.defined %}
   {{ host_proxy_cli }} report-interval {{ vlan_interface.ip_igmp_host_proxy.report_interval }}
{%         endif %}
{%         if vlan_interface.ip_igmp_host_proxy.version is arista.avd.defined %}
   {{ host_proxy_cli }} version {{ vlan_interface.ip_igmp_host_proxy.version }}
{%         endif %}
{%     endif %}
{%     if vlan_interface.ipv6_enable is arista.avd.defined(true) %}
   ipv6 enable
{%     endif %}
{%     if vlan_interface.ipv6_address is arista.avd.defined %}
   ipv6 address {{ vlan_interface.ipv6_address }}
{%     endif %}
{%     if vlan_interface.ipv6_address_link_local is arista.avd.defined %}
   ipv6 address {{ vlan_interface.ipv6_address_link_local }} link-local
{%     endif %}
{%     for ipv6_address_virtual in vlan_interface.ipv6_address_virtuals | arista.avd.natural_sort %}
   ipv6 address virtual {{ ipv6_address_virtual }}
{%     endfor %}
{%     if vlan_interface.ipv6_nd_ra_disabled is arista.avd.defined(true) %}
   ipv6 nd ra disabled
{%     endif %}
{%     if vlan_interface.ipv6_nd_managed_config_flag is arista.avd.defined(true) %}
   ipv6 nd managed-config-flag
{%     endif %}
{%     if vlan_interface.ipv6_nd_other_config_flag is arista.avd.defined(true) %}
   ipv6 nd other-config-flag
{%     endif %}
{%     if vlan_interface.ipv6_nd_prefixes is arista.avd.defined %}
{%         for prefix in vlan_interface.ipv6_nd_prefixes %}
{%             set ipv6_nd_prefix_cli = "ipv6 nd prefix " ~ prefix.ipv6_prefix %}
{%             if prefix.valid_lifetime is arista.avd.defined %}
{%                 set ipv6_nd_prefix_cli = ipv6_nd_prefix_cli ~ " " ~ prefix.valid_lifetime %}
{%                 if prefix.preferred_lifetime is arista.avd.defined %}
{%                     set ipv6_nd_prefix_cli = ipv6_nd_prefix_cli ~ " " ~ prefix.preferred_lifetime %}
{%                 endif %}
{%             endif %}
{%             if prefix.no_autoconfig_flag is arista.avd.defined(true) %}
{%                 set ipv6_nd_prefix_cli = ipv6_nd_prefix_cli ~ " no-autoconfig" %}
{%             endif %}
   {{ ipv6_nd_prefix_cli }}
{%         endfor %}
{%     endif %}
{%     if vlan_interface.multicast is arista.avd.defined %}
{%         if vlan_interface.multicast.ipv4.boundaries is arista.avd.defined %}
{%             for boundary in vlan_interface.multicast.ipv4.boundaries %}
{%                 set boundary_cli = "multicast ipv4 boundary " ~ boundary.boundary %}
{%                 if boundary.out is arista.avd.defined(true) %}
{%                     set boundary_cli = boundary_cli ~ " out" %}
{%                 endif %}
   {{ boundary_cli }}
{%             endfor %}
{%         endif %}
{%         if vlan_interface.multicast.ipv6.boundaries is arista.avd.defined %}
{%             for boundary in vlan_interface.multicast.ipv6.boundaries %}
   multicast ipv6 boundary {{ boundary.boundary }} out
{%             endfor %}
{%         endif %}
{%         if vlan_interface.multicast.ipv4.source_route_export.enabled is arista.avd.defined(true) %}
{%             if vlan_interface.multicast.ipv4.source_route_export.administrative_distance is arista.avd.defined %}
   multicast ipv4 source route export {{ vlan_interface.multicast.ipv4.source_route_export.administrative_distance }}
{%             else %}
   multicast ipv4 source route export
{%             endif %}
{%         endif %}
{%         if vlan_interface.multicast.ipv6.source_route_export.enabled is arista.avd.defined(true) %}
{%             if vlan_interface.multicast.ipv6.source_route_export.administrative_distance is arista.avd.defined %}
   multicast ipv6 source route export {{ vlan_interface.multicast.ipv6.source_route_export.administrative_distance }}
{%             else %}
   multicast ipv6 source route export
{%             endif %}
{%         endif %}
{%         if vlan_interface.multicast.ipv4.static is arista.avd.defined(true) %}
   multicast ipv4 static
{%         endif %}
{%         if vlan_interface.multicast.ipv6.static is arista.avd.defined(true) %}
   multicast ipv6 static
{%         endif %}
{%     endif %}
{%     if vlan_interface.ip_nat is arista.avd.defined %}
{%         set interface_ip_nat = vlan_interface.ip_nat %}
{%         include 'eos/interface-ip-nat.j2' %}
{%     endif %}
{%     if vlan_interface.access_group_in is arista.avd.defined %}
   ip access-group {{ vlan_interface.access_group_in }} in
{%     endif %}
{%     if vlan_interface.access_group_out is arista.avd.defined %}
   ip access-group {{ vlan_interface.access_group_out }} out
{%     endif %}
{%     if vlan_interface.ipv6_access_group_in is arista.avd.defined %}
   ipv6 access-group {{ vlan_interface.ipv6_access_group_in }} in
{%     endif %}
{%     if vlan_interface.ipv6_access_group_out is arista.avd.defined %}
   ipv6 access-group {{ vlan_interface.ipv6_access_group_out }} out
{%     endif %}
{%     if vlan_interface.ospf_network_point_to_point is arista.avd.defined(true) %}
   ip ospf network point-to-point
{%     endif %}
{%     if vlan_interface.ospf_area is arista.avd.defined %}
   ip ospf area {{ vlan_interface.ospf_area }}
{%     endif %}
{%     if vlan_interface.ospf_cost is arista.avd.defined %}
   ip ospf cost {{ vlan_interface.ospf_cost }}
{%     endif %}
{%     if vlan_interface.ospf_authentication is arista.avd.defined %}
{%         if vlan_interface.ospf_authentication == "simple" %}
   ip ospf authentication
{%         elif vlan_interface.ospf_authentication == "message-digest" %}
   ip ospf authentication message-digest
{%         endif %}
{%     endif %}
{%     if vlan_interface.ospf_authentication_key is arista.avd.defined %}
   ip ospf authentication-key 7 {{ vlan_interface.ospf_authentication_key | arista.avd.hide_passwords(hide_passwords) }}
{%     endif %}
{%     for ospf_message_digest_key in vlan_interface.ospf_message_digest_keys | arista.avd.natural_sort('id') %}
{%         if ospf_message_digest_key.hash_algorithm is arista.avd.defined and
              ospf_message_digest_key.key is arista.avd.defined %}
   ip ospf message-digest-key {{ ospf_message_digest_key.id }} {{ ospf_message_digest_key.hash_algorithm }} 7 {{ ospf_message_digest_key.key | arista.avd.hide_passwords(hide_passwords) }}
{%         endif %}
{%     endfor %}
{%     if vlan_interface.pim.ipv4.sparse_mode is arista.avd.defined(true) %}
   pim ipv4 sparse-mode
{%     endif %}
{%     if vlan_interface.pim.ipv4.bidirectional is arista.avd.defined(true) %}
   pim ipv4 bidirectional
{%     endif %}
{%     if vlan_interface.pim.ipv4.border_router is arista.avd.defined(true) %}
   pim ipv4 border-router
{%     endif %}
{%     if vlan_interface.pim.ipv4.hello.interval is arista.avd.defined %}
   pim ipv4 hello interval {{ vlan_interface.pim.ipv4.hello.interval }}
{%     endif %}
{%     if vlan_interface.pim.ipv4.hello.count is arista.avd.defined %}
   pim ipv4 hello count {{ vlan_interface.pim.ipv4.hello.count }}
{%     endif %}
{%     if vlan_interface.pim.ipv4.dr_priority is arista.avd.defined %}
   pim ipv4 dr-priority {{ vlan_interface.pim.ipv4.dr_priority }}
{%     endif %}
{%     if vlan_interface.pim.ipv4.bfd is arista.avd.defined(true) %}
   pim ipv4 bfd
{%     endif %}
{%     if vlan_interface.pim.ipv4.local_interface is arista.avd.defined %}
   pim ipv4 local-interface {{ vlan_interface.pim.ipv4.local_interface }}
{%     endif %}
{%     if vlan_interface.ipv6_virtual_router_addresses is arista.avd.defined %}
{%         for ipv6_virtual_router_address in vlan_interface.ipv6_virtual_router_addresses %}
   ipv6 virtual-router address {{ ipv6_virtual_router_address }}
{%         endfor %}
{%     endif %}
{%     if vlan_interface.isis_enable is arista.avd.defined %}
   isis enable {{ vlan_interface.isis_enable }}
{%     endif %}
{%     if vlan_interface.isis_bfd is arista.avd.defined(true) %}
   isis bfd
{%     endif %}
{%     if vlan_interface.isis_passive is arista.avd.defined(true) %}
   isis passive
{%     endif %}
{%     if vlan_interface.isis_metric is arista.avd.defined %}
   isis metric {{ vlan_interface.isis_metric }}
{%     endif %}
{%     if vlan_interface.isis_network_point_to_point is arista.avd.defined(true) %}
   isis network point-to-point
{%     endif %}
{%     if vlan_interface.isis_authentication.both.mode is arista.avd.defined
          and (vlan_interface.isis_authentication.both.mode in ["md5", "text"]
               or (vlan_interface.isis_authentication.both.mode == "sha" and vlan_interface.isis_authentication.both.sha.key_id is arista.avd.defined)
               or (vlan_interface.isis_authentication.both.mode == "shared-secret"
                   and vlan_interface.isis_authentication.both.shared_secret.profile is arista.avd.defined
                   and vlan_interface.isis_authentication.both.shared_secret.algorithm is arista.avd.defined)) %}
{%         set isis_auth_cli = "isis authentication mode " ~ vlan_interface.isis_authentication.both.mode %}
{%         if vlan_interface.isis_authentication.both.mode == "sha" %}
{%             set isis_auth_cli = isis_auth_cli ~ " key-id " ~ vlan_interface.isis_authentication.both.sha.key_id %}
{%         elif vlan_interface.isis_authentication.both.mode == "shared-secret" %}
{%             set isis_auth_cli = isis_auth_cli ~ " profile " ~ vlan_interface.isis_authentication.both.shared_secret.profile ~ " algorithm " ~ vlan_interface.isis_authentication.both.shared_secret.algorithm %}
{%         endif %}
{%         if vlan_interface.isis_authentication.both.rx_disabled is arista.avd.defined(true) %}
{%             set isis_auth_cli = isis_auth_cli ~ " rx-disabled" %}
{%         endif %}
   {{ isis_auth_cli }}
{%     else %}
{%         if vlan_interface.isis_authentication.level_1.mode is arista.avd.defined
               and (vlan_interface.isis_authentication.level_1.mode in ["md5", "text"]
               or (vlan_interface.isis_authentication.level_1.mode == "sha" and vlan_interface.isis_authentication.level_1.sha.key_id is arista.avd.defined)
               or (vlan_interface.isis_authentication.level_1.mode == "shared-secret"
                   and vlan_interface.isis_authentication.level_1.shared_secret.profile is arista.avd.defined
                   and vlan_interface.isis_authentication.level_1.shared_secret.algorithm is arista.avd.defined)) %}
{%             set isis_auth_cli = "isis authentication mode " ~ vlan_interface.isis_authentication.level_1.mode %}
{%             if vlan_interface.isis_authentication.level_1.mode == "sha" %}
{%                 set isis_auth_cli = isis_auth_cli ~ " key-id " ~ vlan_interface.isis_authentication.level_1.sha.key_id %}
{%             elif vlan_interface.isis_authentication.level_1.mode == "shared-secret" %}
{%                 set isis_auth_cli = isis_auth_cli ~ " profile " ~ vlan_interface.isis_authentication.level_1.shared_secret.profile ~ " algorithm " ~ vlan_interface.isis_authentication.level_1.shared_secret.algorithm %}
{%             endif %}
{%             if vlan_interface.isis_authentication.level_1.rx_disabled is arista.avd.defined(true) %}
{%                 set isis_auth_cli = isis_auth_cli ~ " rx-disabled" %}
{%             endif %}
   {{ isis_auth_cli }} level-1
{%         endif %}
{%         if vlan_interface.isis_authentication.level_2.mode is arista.avd.defined
               and (vlan_interface.isis_authentication.level_2.mode in ["md5", "text"]
               or (vlan_interface.isis_authentication.level_2.mode == "sha" and vlan_interface.isis_authentication.level_2.sha.key_id is arista.avd.defined)
               or (vlan_interface.isis_authentication.level_2.mode == "shared-secret"
                   and vlan_interface.isis_authentication.level_2.shared_secret.profile is arista.avd.defined
                   and vlan_interface.isis_authentication.level_2.shared_secret.algorithm is arista.avd.defined)) %}
{%             set isis_auth_cli = "isis authentication mode " ~ vlan_interface.isis_authentication.level_2.mode %}
{%             if vlan_interface.isis_authentication.level_2.mode == "sha" %}
{%                 set isis_auth_cli = isis_auth_cli ~ " key-id " ~ vlan_interface.isis_authentication.level_2.sha.key_id %}
{%             elif vlan_interface.isis_authentication.level_2.mode == "shared-secret" %}
{%                 set isis_auth_cli = isis_auth_cli ~ " profile " ~ vlan_interface.isis_authentication.level_2.shared_secret.profile ~ " algorithm " ~ vlan_interface.isis_authentication.level_2.shared_secret.algorithm %}
{%             endif %}
{%             if vlan_interface.isis_authentication.level_2.rx_disabled is arista.avd.defined(true) %}
{%                 set isis_auth_cli = isis_auth_cli ~ " rx-disabled" %}
{%             endif %}
   {{ isis_auth_cli }} level-2
{%         endif %}
{%     endif %}
{%     if vlan_interface.isis_authentication is arista.avd.defined %}
{%         set both_key_ids = [] %}
{%         if vlan_interface.isis_authentication.both.key_ids is arista.avd.defined %}
{%             for auth_key in vlan_interface.isis_authentication.both.key_ids | arista.avd.natural_sort("id") %}
{%                 if auth_key.id is arista.avd.defined
                       and auth_key.algorithm is arista.avd.defined
                       and auth_key.key_type is arista.avd.defined
                       and auth_key.key is arista.avd.defined %}
{%                     do both_key_ids.append(auth_key.id) %}
{%                     if auth_key.rfc_5310 is arista.avd.defined(true) %}
   isis authentication key-id {{ auth_key.id }} algorithm {{ auth_key.algorithm }} rfc-5310 key {{ auth_key.key_type }} {{ auth_key.key }}
{%                     else %}
   isis authentication key-id {{ auth_key.id }} algorithm {{ auth_key.algorithm }} key {{ auth_key.key_type }} {{ auth_key.key }}
{%                     endif %}
{%                 endif %}
{%             endfor %}
{%         endif %}
{%         for auth_key in vlan_interface.isis_authentication.level_1.key_ids | arista.avd.natural_sort("id") %}
{%             if auth_key.id is arista.avd.defined
                  and auth_key.id not in both_key_ids
                  and auth_key.algorithm is arista.avd.defined
                  and auth_key.key_type is arista.avd.defined
                  and auth_key.key is arista.avd.defined %}
{%                 if auth_key.rfc_5310 is arista.avd.defined(true) %}
   isis authentication key-id {{ auth_key.id }} algorithm {{ auth_key.algorithm }} rfc-5310 key {{ auth_key.key_type }} {{ auth_key.key }} level-1
{%                 else %}
   isis authentication key-id {{ auth_key.id }} algorithm {{ auth_key.algorithm }} key {{ auth_key.key_type }} {{ auth_key.key }} level-1
{%                 endif %}
{%             endif %}
{%         endfor %}
{%         for auth_key in vlan_interface.isis_authentication.level_2.key_ids | arista.avd.natural_sort("id") %}
{%             if auth_key.id is arista.avd.defined
                  and auth_key.id not in both_key_ids
                  and auth_key.algorithm is arista.avd.defined
                  and auth_key.key_type is arista.avd.defined
                  and auth_key.key is arista.avd.defined %}
{%                 if auth_key.rfc_5310 is arista.avd.defined(true) %}
   isis authentication key-id {{ auth_key.id }} algorithm {{ auth_key.algorithm }} rfc-5310 key {{ auth_key.key_type }} {{ auth_key.key }} level-2
{%                 else %}
   isis authentication key-id {{ auth_key.id }} algorithm {{ auth_key.algorithm }} key {{ auth_key.key_type }} {{ auth_key.key }} level-2
{%                 endif %}
{%             endif %}
{%         endfor %}
{%         if vlan_interface.isis_authentication.both.key_type is arista.avd.defined and vlan_interface.isis_authentication.both.key is arista.avd.defined %}
   isis authentication key {{ vlan_interface.isis_authentication.both.key_type }} {{ vlan_interface.isis_authentication.both.key }}
{%         else %}
{%             if vlan_interface.isis_authentication.level_1.key_type is arista.avd.defined and vlan_interface.isis_authentication.level_1.key is arista.avd.defined %}
   isis authentication key {{ vlan_interface.isis_authentication.level_1.key_type }} {{ vlan_interface.isis_authentication.level_1.key }} level-1
{%             endif %}
{%             if vlan_interface.isis_authentication.level_2.key_type is arista.avd.defined and vlan_interface.isis_authentication.level_2.key is arista.avd.defined %}
   isis authentication key {{ vlan_interface.isis_authentication.level_2.key_type }} {{ vlan_interface.isis_authentication.level_2.key }} level-2
{%             endif %}
{%         endif %}
{%     endif %}
{%     if vlan_interface.vrrp_ids is arista.avd.defined %}
{%         for vrid in vlan_interface.vrrp_ids | arista.avd.natural_sort('id') if vrid.id is arista.avd.defined %}
{%             if vrid.priority_level is arista.avd.defined %}
   vrrp {{ vrid.id }} priority-level {{ vrid.priority_level }}
{%             endif %}
{%             if vrid.advertisement.interval is arista.avd.defined %}
   vrrp {{ vrid.id }} advertisement interval {{ vrid.advertisement.interval }}
{%             endif %}
{%             if vrid.preempt.enabled is arista.avd.defined(true) and (
                  vrid.preempt.delay.minimum is arista.avd.defined or
                  vrid.preempt.delay.reload is arista.avd.defined) %}
{%                 set delay_cli = 'vrrp ' ~ vrid.id ~ ' preempt delay' %}
{%                 if vrid.preempt.delay.minimum is arista.avd.defined %}
{%                     set delay_cli = delay_cli ~ ' minimum ' ~ vrid.preempt.delay.minimum %}
{%                 endif %}
{%                 if vrid.preempt.delay.reload is arista.avd.defined %}
{%                     set delay_cli = delay_cli ~ ' reload ' ~ vrid.preempt.delay.reload %}
{%                 endif %}
   {{ delay_cli }}
{%             elif vrid.preempt.enabled is arista.avd.defined(false) %}
   no vrrp {{ vrid.id }} preempt
{%             endif %}
{%             if vrid.timers.delay.reload is arista.avd.defined %}
   vrrp {{ vrid.id }} timers delay reload {{ vrid.timers.delay.reload }}
{%             endif %}
{%             if vrid.ipv4.address is arista.avd.defined %}
   vrrp {{ vrid.id }} ipv4 {{ vrid.ipv4.address }}
{%             endif %}
{%             if vrid.ipv4.version is arista.avd.defined %}
   vrrp {{ vrid.id }} ipv4 version {{ vrid.ipv4.version }}
{%             endif %}
{%             if vrid.ipv6.address is arista.avd.defined %}
   vrrp {{ vrid.id }} ipv6 {{ vrid.ipv6.address }}
{%             endif %}
{%             for tracked_obj in vrid.tracked_object | arista.avd.natural_sort('name') %}
{%                 if tracked_obj.name is arista.avd.defined %}
{%                     set tracked_obj_cli = "vrrp " ~ vrid.id ~ " tracked-object " ~ tracked_obj.name %}
{%                     if tracked_obj.decrement is arista.avd.defined %}
{%                         set tracked_obj_cli = tracked_obj_cli ~ " decrement " ~ tracked_obj.decrement %}
{%                     elif tracked_obj.shutdown is arista.avd.defined(true) %}
{%                         set tracked_obj_cli = tracked_obj_cli ~ " shutdown" %}
{%                     endif %}
   {{ tracked_obj_cli }}
{%                 endif %}
{%             endfor %}
{%         endfor %}
{%     endif %}
{%     if vlan_interface.ip_attached_host_route_export.enabled is arista.avd.defined(true) %}
{%         set ip_attached_host_route_export_cli = "ip attached-host route export" %}
{%         if vlan_interface.ip_attached_host_route_export.distance is arista.avd.defined %}
{%             set ip_attached_host_route_export_cli = ip_attached_host_route_export_cli ~ " " ~ vlan_interface.ip_attached_host_route_export.distance %}
{%         endif %}
   {{ ip_attached_host_route_export_cli }}
{%     endif %}
{%     if vlan_interface.bfd.interval is arista.avd.defined and
          vlan_interface.bfd.min_rx is arista.avd.defined and
          vlan_interface.bfd.multiplier is arista.avd.defined %}
   bfd interval {{ vlan_interface.bfd.interval }} min-rx {{ vlan_interface.bfd.min_rx }} multiplier {{ vlan_interface.bfd.multiplier }}
{%     endif %}
{%     if vlan_interface.bfd.echo is arista.avd.defined(true) %}
   bfd echo
{%     elif vlan_interface.bfd.echo is arista.avd.defined(false) %}
   no bfd echo
{%     endif %}
{%     if vlan_interface.service_policy.pbr.input is arista.avd.defined %}
   service-policy type pbr input {{ vlan_interface.service_policy.pbr.input }}
{%     endif %}
{%     if vlan_interface.pvlan_mapping is arista.avd.defined %}
   pvlan mapping {{ vlan_interface.pvlan_mapping }}
{%     endif %}
{%     if vlan_interface.ip_virtual_router_addresses is arista.avd.defined %}
{%         for ip_virtual_router_address in vlan_interface.ip_virtual_router_addresses %}
   ip virtual-router address {{ ip_virtual_router_address }}
{%         endfor %}
{%     endif %}
{%     if vlan_interface.ip_address_virtual is arista.avd.defined %}
   ip address virtual {{ vlan_interface.ip_address_virtual }}
{%         if vlan_interface.ip_address_virtual_secondaries is arista.avd.defined %}
{%             for ip_address_virtual_secondary in vlan_interface.ip_address_virtual_secondaries %}
   ip address virtual {{ ip_address_virtual_secondary }} secondary
{%             endfor %}
{%         endif %}
{%     endif %}
{%     if vlan_interface.eos_cli is arista.avd.defined %}
   {{ vlan_interface.eos_cli | indent(3, false) }}
{%     endif %}
{% endfor %}
