{#
 Copyright (c) 2023-2024 Arista Networks, Inc.
 Use of this source code is governed by the Apache License 2.0
 that can be found in the LICENSE file.
#}
{# eos - mpls #}
{% if mpls.ip is arista.avd.defined(true) %}
!
mpls ip
{% endif %}
{% if mpls.ldp is arista.avd.defined %}
!
mpls ldp
{%     if mpls.ldp.router_id is arista.avd.defined %}
   router-id {{ mpls.ldp.router_id }}
{%     endif %}
{%     if mpls.ldp.transport_address_interface is arista.avd.defined %}
   transport-address interface {{ mpls.ldp.transport_address_interface }}
{%     endif %}
{%     if mpls.ldp.interface_disabled_default is arista.avd.defined(true) %}
   interface disabled default
{%     endif %}
{%     if mpls.ldp.shutdown is arista.avd.defined(true) %}
   shutdown
{%     elif mpls.ldp.shutdown is arista.avd.defined(false) %}
   no shutdown
{%     endif %}
{% endif %}
{% if mpls.icmp.fragmentation_needed_tunneling is arista.avd.defined(true) or mpls.icmp.ttl_exceeded_tunneling is arista.avd.defined(true) %}
!
{%     if mpls.icmp.fragmentation_needed_tunneling is arista.avd.defined(true) %}
mpls icmp fragmentation-needed tunneling
{%     endif %}
{%     if mpls.icmp.ttl_exceeded_tunneling is arista.avd.defined(true) %}
mpls icmp ttl-exceeded tunneling
{%     endif %}
{% endif %}
{% if mpls.rsvp is arista.avd.defined %}
!
mpls rsvp
{%     if mpls.rsvp.refresh is arista.avd.defined %}
{%         if mpls.rsvp.refresh.interval is arista.avd.defined %}
   refresh interval {{ mpls.rsvp.refresh.interval }}
{%         endif %}
{%         if mpls.rsvp.refresh.method is arista.avd.defined %}
   refresh method {{ mpls.rsvp.refresh.method }}
{%         endif %}
{%     endif %}
{%     if mpls.rsvp.hello.interval is arista.avd.defined and mpls.rsvp.hello.multiplier is arista.avd.defined %}
   hello interval {{ mpls.rsvp.hello.interval }} multiplier {{ mpls.rsvp.hello.multiplier }}
{%     endif %}
{%     if mpls.rsvp.authentication is arista.avd.defined %}
{%         set auth = mpls.rsvp.authentication %}
{%         if auth.type is arista.avd.defined %}
   authentication type {{ auth.type }}
{%         endif %}
{%         if auth.sequence_number_window is arista.avd.defined %}
   authentication sequence-number window {{ auth.sequence_number_window }}
{%         endif %}
{%         for password_index in auth.password_indexes | arista.avd.natural_sort('index') %}
{%             if password_index.index is arista.avd.defined and password_index.password_type is arista.avd.defined and password_index.password is arista.avd.defined %}
   authentication index {{ password_index.index }} password {{ password_index.password_type }} {{ password_index.password | arista.avd.hide_passwords(hide_passwords) }}
{%             endif %}
{%         endfor %}
{%         if auth.active_index is arista.avd.defined %}
   authentication index {{ auth.active_index }} active
{%         endif %}
{%     endif %}
{%     for neighbor in mpls.rsvp.neighbors | arista.avd.natural_sort('ip') %}
{%         if neighbor.authentication.type is arista.avd.defined %}
   neighbor {{ neighbor.ip }} authentication type {{ neighbor.authentication.type }}
{%         endif %}
{%         if neighbor.authentication.index is arista.avd.defined %}
   neighbor {{ neighbor.ip }} authentication index {{ neighbor.authentication.index }} active
{%         endif %}
{%     endfor %}
{%     if mpls.rsvp.ip_access_group is arista.avd.defined %}
   ip access-group {{ mpls.rsvp.ip_access_group }}
{%     endif %}
{%     if mpls.rsvp.ipv6_access_group is arista.avd.defined %}
   ipv6 access-group {{ mpls.rsvp.ipv6_access_group }}
{%     endif %}
{%     if mpls.rsvp.fast_reroute is arista.avd.defined %}
{%         set fast_reroute = mpls.rsvp.fast_reroute %}
{%         if fast_reroute.mode is arista.avd.defined %}
   fast-reroute mode {{ fast_reroute.mode }}
{%         endif %}
{%         if fast_reroute.reversion is arista.avd.defined %}
   fast-reroute reversion {{ fast_reroute.reversion }}
{%         endif %}
{%         if fast_reroute.bypass_tunnel_optimization_interval is arista.avd.defined %}
   fast-reroute bypass tunnel optimization interval {{ fast_reroute.bypass_tunnel_optimization_interval }} seconds
{%         endif %}
{%     endif %}
{%     if mpls.rsvp.srlg.enabled is arista.avd.defined(true) %}
{%         set srlg_cli = "srlg" %}
{%         if mpls.rsvp.srlg.strict is arista.avd.defined(true) %}
{%             set srlg_cli = srlg_cli ~ " strict" %}
{%         endif %}
   {{ srlg_cli }}
{%     endif %}
{%     if mpls.rsvp.label_local_termination is arista.avd.defined %}
   label local-termination {{ mpls.rsvp.label_local_termination }}
{%     endif %}
{%     if mpls.rsvp.preemption_method.preemption is arista.avd.defined %}
{%         set preemption_cli = "preemption method " ~ mpls.rsvp.preemption_method.preemption %}
{%         if mpls.rsvp.preemption_method.timer is arista.avd.defined %}
{%             set preemption_cli = preemption_cli ~ " timer " ~ mpls.rsvp.preemption_method.timer %}
{%         endif %}
   {{ preemption_cli }}
{%     endif %}
{%     if mpls.rsvp.mtu_signaling is arista.avd.defined %}
   mtu signaling
{%     endif %}
{%     if mpls.rsvp.hitless_restart.enabled is arista.avd.defined(true) %}
   !
   hitless-restart
{%         if mpls.rsvp.hitless_restart.timer_recovery is arista.avd.defined %}
      timer recovery {{ mpls.rsvp.hitless_restart.timer_recovery }} seconds
{%         endif %}
{%     endif %}
{%     if mpls.rsvp.graceful_restart is arista.avd.defined %}
{%         set graceful_restart = mpls.rsvp.graceful_restart %}
{%         if graceful_restart.role_helper.enabled is arista.avd.defined(true) %}
   !
   graceful-restart role helper
{%             if graceful_restart.role_helper.grace_period_recovery is arista.avd.defined %}
      timer restart maximum {{ graceful_restart.role_helper.grace_period_recovery }} seconds
{%             endif %}
{%             if graceful_restart.role_helper.grace_period_restart is arista.avd.defined %}
      timer recovery maximum {{ graceful_restart.role_helper.grace_period_restart }} seconds
{%             endif %}
{%         endif %}
{%         if graceful_restart.role_speaker.enabled is arista.avd.defined(true) %}
   !
   graceful-restart role speaker
{%             if graceful_restart.role_speaker.grace_period_recovery is arista.avd.defined %}
      timer restart {{ graceful_restart.role_speaker.grace_period_recovery }} seconds
{%             endif %}
{%             if graceful_restart.role_speaker.grace_period_restart is arista.avd.defined %}
      timer recovery {{ graceful_restart.role_speaker.grace_period_restart }} seconds
{%             endif %}
{%         endif %}
{%     endif %}
{%     if mpls.rsvp.p2mp_enabled is arista.avd.defined(true) %}
   !
   p2mp
{%     elif mpls.rsvp.p2mp_enabled is arista.avd.defined(false) %}
   !
   p2mp
      disabled
{%     endif %}
{%     if mpls.rsvp.shutdown is arista.avd.defined(true) %}
   shutdown
{%     endif %}
{% endif %}
