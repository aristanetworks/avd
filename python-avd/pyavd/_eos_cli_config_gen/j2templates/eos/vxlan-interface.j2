{#
 Copyright (c) 2023-2024 Arista Networks, Inc.
 Use of this source code is governed by the Apache License 2.0
 that can be found in the LICENSE file.
#}
{# j2lint: disable=V1 #}
{# eos - vxlan interface #}
{% set vxlan_config = vxlan_interface.vxlan1 | arista.avd.default(vxlan_interface.Vxlan1) %}
{% if vxlan_config is arista.avd.defined %}
!
interface Vxlan1
{%     if vxlan_config.description is arista.avd.defined %}
   description {{ vxlan_config.description }}
{%     endif %}
{%     if vxlan_config.vxlan.source_interface is arista.avd.defined %}
   vxlan source-interface {{ vxlan_config.vxlan.source_interface }}
{%     endif %}
{%     if vxlan_config.vxlan.controller_client.enabled is arista.avd.defined(true) %}
   vxlan controller-client
{%     endif %}
{%     if vxlan_config.vxlan.virtual_router_encapsulation_mac_address is arista.avd.defined %}
   vxlan virtual-router encapsulation mac-address {{ vxlan_config.vxlan.virtual_router_encapsulation_mac_address }}
{%     endif %}
{%     if vxlan_config.vxlan.udp_port is arista.avd.defined %}
   vxlan udp-port {{ vxlan_config.vxlan.udp_port }}
{%     endif %}
{%     if vxlan_config.vxlan.vtep_to_vtep_bridging is arista.avd.defined(true) %}
   vxlan bridging vtep-to-vtep
{%     endif %}
{%     if vxlan_config.vxlan.flood_vtep_learned_data_plane is arista.avd.defined(true) %}
   vxlan flood vtep learned data-plane
{%     endif %}
{%     for vlan in vxlan_config.vxlan.vlans | arista.avd.natural_sort('id') %}
{%         if vlan.vni is arista.avd.defined %}
   vxlan vlan {{ vlan.id }} vni {{ vlan.vni }}
{%         endif %}
{%     endfor %}
{%     for vrf in vxlan_config.vxlan.vrfs | arista.avd.natural_sort('name') %}
{%         if vrf.vni is arista.avd.defined %}
   vxlan vrf {{ vrf.name }} vni {{ vrf.vni }}
{%         endif %}
{%     endfor %}
{%     if vxlan_config.vxlan.mlag_source_interface is arista.avd.defined %}
   vxlan mlag source-interface {{ vxlan_config.vxlan.mlag_source_interface }}
{%     endif %}
{%     if vxlan_config.vxlan.bfd_vtep_evpn is arista.avd.defined %}
{%         if vxlan_config.vxlan.bfd_vtep_evpn.interval is arista.avd.defined
               and vxlan_config.vxlan.bfd_vtep_evpn.min_rx is arista.avd.defined
               and vxlan_config.vxlan.bfd_vtep_evpn.multiplier is arista.avd.defined %}
   bfd vtep evpn interval {{ vxlan_config.vxlan.bfd_vtep_evpn.interval }} min-rx {{ vxlan_config.vxlan.bfd_vtep_evpn.min_rx }} multiplier {{ vxlan_config.vxlan.bfd_vtep_evpn.multiplier }}
{%         endif %}
{%         if vxlan_config.vxlan.bfd_vtep_evpn.prefix_list is arista.avd.defined %}
   bfd vtep evpn prefix-list {{ vxlan_config.vxlan.bfd_vtep_evpn.prefix_list }}
{%         endif %}
{%     endif %}
{%     if vxlan_config.vxlan.flood_vteps is arista.avd.defined %}
   vxlan flood vtep {{ vxlan_config.vxlan.flood_vteps | join(' ') }}
{%     endif %}
{%     for vlan in vxlan_config.vxlan.vlans | arista.avd.natural_sort('id') %}
{%         if vlan.flood_vteps is arista.avd.defined %}
   vxlan vlan {{ vlan.id }} flood vtep {{ vlan.flood_vteps | join(' ') }}
{%         endif %}
{%     endfor %}
{%     for vlan in vxlan_config.vxlan.vlans | arista.avd.natural_sort('id') if vlan.multicast_group is arista.avd.defined %}
   vxlan vlan {{ vlan.id }} multicast group {{ vlan.multicast_group }}
{%     endfor %}
{%     for vrf in vxlan_config.vxlan.vrfs | arista.avd.natural_sort('name') if vrf.multicast_group is arista.avd.defined %}
   vxlan vrf {{ vrf.name }} multicast group {{ vrf.multicast_group }}
{%     endfor %}
{%     if vxlan_config.vxlan.multicast.headend_replication is arista.avd.defined(true) %}
   vxlan multicast headend-replication
{%     endif %}
{%     if vxlan_config.vxlan.qos.ecn_propagation is arista.avd.defined(true) %}
   vxlan qos ecn propagation
{%     elif vxlan_config.vxlan.qos.ecn_propagation is arista.avd.defined(false) %}
   no vxlan qos ecn propagation
{%     endif %}
{%     if vxlan_config.vxlan.qos.dscp_propagation_encapsulation is arista.avd.defined(true) %}
   vxlan qos dscp propagation encapsulation
{%     elif vxlan_config.vxlan.qos.dscp_propagation_encapsulation is arista.avd.defined(false) %}
   no vxlan qos dscp propagation encapsulation
{%     endif %}
{%     if vxlan_config.vxlan.qos.map_dscp_to_traffic_class_decapsulation is arista.avd.defined(true) %}
   vxlan qos map dscp to traffic-class decapsulation
{%     elif vxlan_config.vxlan.qos.map_dscp_to_traffic_class_decapsulation is arista.avd.defined(false) %}
   no vxlan qos map dscp to traffic-class decapsulation
{%     endif %}
{%     if  vxlan_config.eos_cli is arista.avd.defined %}
   {{ vxlan_config.eos_cli | indent(3, false) }}
{%     endif %}
{% endif %}
